<library path="lib/libprx_planning_lib">

<class name="prx_planning/default_world_model"
    type="prx::plan::world_model_t"
    base_class_type="prx::plan::world_model_t">
    <description>
        The basic world model.
    </description>        
</class>

    <!-- Samplers -->

    <class name="prx_planning/uniform_sampler"
        type="prx::plan::uniform_sampler_t"
        base_class_type="prx::plan::sampler_t">
        <description>
            Samples uniformly in the space
        </description>
    </class>
    <class name="prx_planning/restricted_normals_sampler"
        type="prx::plan::restricted_normals_sampler_t"
        base_class_type="prx::plan::sampler_t">
        <description>
            Performs rejection sampling based on certain normals.
        </description>
    </class>
    <class name="prx_planning/rally_car_sampler"
        type="prx::plan::rally_car_sampler_t"
        base_class_type="prx::plan::sampler_t">
        <description>
            A specialized space sampler for rally cars.
        </description>
    </class>

    <!-- COMMUNICATION CLASSES -->
    <class name="prx_planning/visualization_comm"
        type="prx::plan::comm::visualization_comm_t"
        base_class_type="prx::plan::plan_base_communication_t">
        <description>
            Default communication between planning and visualization.
        </description>
    </class>

    <class name="prx_planning/simulation_comm"
        type="prx::plan::comm::simulation_comm_t"
        base_class_type="prx::plan::plan_base_communication_t">
        <description>
            Default communication between planning and simulation.
        </description>
    </class>


    <class name="prx_planning/planning_comm"
        type="prx::plan::comm::planning_comm_t"
        base_class_type="prx::plan::plan_base_communication_t">
        <description>
            Default communication initiated by planning.
        </description>
    </class>
    <!-- Planning Applications -->

    <class name="prx_planning/single_query_application"
        type="prx::plan::single_query_application_t"
        base_class_type="prx::plan::planning_application_t">
        <description>
            Top level application class that reasons over a single query
        </description>
    </class>

    <class name="prx_planning/ground_truth_query_application"
        type="prx::plan::ground_truth_query_application_t"
        base_class_type="prx::plan::planning_application_t">
        <description>
            A planning application that receives and is reason about ground truth
        </description>
    </class>

    <!-- Task Planners -->
    <class name="prx_planning/single_shot"
        type="prx::plan::single_shot_planner_t"
        base_class_type="prx::plan::planner_t">
        <description>
            Performs single shot planning queries.
        </description>
    </class>

    <class name="prx_planning/multi_planner"
        type="prx::plan::multi_planner_t"
        base_class_type="prx::plan::planner_t">
        <description>
            Performs multiple motion planners in sequence, gathering statistics.
        </description>
    </class>

    <class name="prx_planning/replanning_planner"
        type="prx::plan::replanning_planner_t"
        base_class_type="prx::plan::planner_t">
        <description>
            Performs replanning.
        </description>
    </class>


<!-- Motion Planners -->

    <class name="prx_planning/prm_star"
        type="prx::plan::prm_star_t"
        base_class_type="prx::plan::planner_t">
        <description>
            Probabilistic Roadmap Method.
        </description>
    </class>

    <class name="prx_planning/rrg"
        type="prx::plan::rrg_t"
        base_class_type="prx::plan::planner_t">
        <description>
            Rapidly Exploring Random Graph.
        </description>
    </class>

    <class name="prx_planning/irs"
        type="prx::plan::irs_t"
        base_class_type="prx::plan::planner_t">
        <description>
            Incremental Roadmap Spanner
        </description>
    </class>

    <class name="prx_planning/rrt"
        type="prx::plan::rrt_t"
        base_class_type="prx::plan::planner_t">
        <description>
            Randomly-exploring Random Tree.
        </description>
    </class>
    <class name="prx_planning/anytime_rrt"
        type="prx::plan::anytime_rrt_t"
        base_class_type="prx::plan::planner_t">
        <description>
            Anytime RRT
        </description>
    </class>

    <class name="prx_planning/rrtc"
        type="prx::plan::rrtc_t"
        base_class_type="prx::plan::planner_t">
        <description>
            RRT-connect, a bi-directional, greedy tree algorithm.
        </description>
    </class>

    <class name="prx_planning/rrt_star"
        type="prx::plan::rrt_star_t"
        base_class_type="prx::plan::planner_t">
        <description>
            RRT* (Sampling-based Algorithms for Optimal Motion Planning  Karaman,Frazzoli)
        </description>
    </class>

    <class name="prx_planning/sst"
        type="prx::plan::sst_t"
        base_class_type="prx::plan::planner_t">
        <description>
            SST (Stable Sparse-RRT)
        </description>
    </class>

    <class name="prx_planning/isst"
        type="prx::plan::isst_t"
        base_class_type="prx::plan::planner_t">
        <description>
            iSST (Informed Stable Sparse-RRT)
        </description>
    </class>

<!-- Validity Checkers -->

    <class name="prx_planning/world_model_validity_checker"
        type="prx::plan::world_model_validity_checker_t"
        base_class_type="prx::plan::validity_checker_t">
        <description>
            Uses the world model to check the validity of states.
        </description>
    </class>

    <class name="prx_planning/near_collision_validity_checker"
        type="prx::plan::near_collision_validity_checker_t"
        base_class_type="prx::plan::validity_checker_t">
        <description>
            Ensures states are valid within a certain clearance threshold.
        </description>
    </class>

    <class name="prx_planning/ignore_list_validity_checker"
        type="prx::plan::ignore_list_validity_checker_t"
        base_class_type="prx::plan::validity_checker_t">
        <description>
            This checker can load a list of collisions which do not invalidate states.
        </description>
    </class>

    <class name="prx_planning/temporal_validity_checker"
        type="prx::plan::temporal_validity_checker_t"
        base_class_type="prx::plan::validity_checker_t">
        <description>
            Relies on informed trajectories to determine invalid states.
        </description>
    </class> 

<!-- Local Planners -->
    <class name="prx_planning/approach_local_planner"
        type="prx::plan::approach_local_planner_t"
        base_class_type="prx::plan::local_planner_t">
        <description>
            Uses the world model propagate to create local plans.
        </description>
    </class>

    <class name="prx_planning/time_varying_local_planner"
        type="prx::plan::time_varying_local_planner_t"
        base_class_type="prx::plan::local_planner_t">
        <description>
            Uses the world model propagate to create local plans with a random amount of time for propagation.
        </description>
    </class>


    <class name="prx_planning/gradient_descent_local_planner"
        type="prx::plan::gradient_descent_local_planner_t"
        base_class_type="prx::plan::local_planner_t">
        <description>
            Performs a gradient descent to improve controls
        </description>
    </class>

    <class name="prx_planning/bvp_local_planner"
        type="prx::plan::bvp_local_planner_t"
        base_class_type="prx::plan::local_planner_t">
        <description>
            Connects two states with the steering_function in simulator.
        </description>
    </class>

<!-- Path smoothers -->

    <class name="prx_planning/shortcut_smoother"
        type="prx::plan::shortcut_smoother_t"
        base_class_type="prx::plan::planner_t">
        <description>
            Performs smoothing by finding shortcuts.
        </description>
    </class>

    <!-- Heuristic Search -->

    <class name="prx_planning/constraints_astar_search"
        type="prx::plan::constraints_astar_search_t"
        base_class_type="prx::plan::constraints_astar_search_t">
        <description>
            Performs standard, lazy, and MCR search on a graph with constraints
        </description>
    </class>

<!-- Stopping Criteria -->

    <class name="prx_planning/pno_criterion"
        type="prx::plan::pno_criterion_t"
        base_class_type="prx::plan::criterion_t">
        <description>
            A criterion which ensures Probabilistic Near-Optimality.
        </description>
    </class>

    <class name="prx_planning/timed_criterion"
        type="prx::plan::timed_criterion_t"
        base_class_type="prx::plan::criterion_t">
        <description>
            Will signal a stop when the allotted time runs out.
        </description>
    </class>
    <class name="prx_planning/log_timed_criterion"
        type="prx::plan::log_timed_criterion_t"
        base_class_type="prx::plan::criterion_t">
        <description>
            Will signal a stop when the allotted time runs out. Also scales the time up for subsequent checks.
        </description>
    </class>

    <class name="prx_planning/iteration_criterion"
        type="prx::plan::iteration_criterion_t"
        base_class_type="prx::plan::criterion_t">
        <description>
            Will signal a stop when the number of iterations is reached
        </description>
    </class>

    <class name="prx_planning/goal_criterion"
        type="prx::plan::goal_criterion_t"
        base_class_type="prx::plan::criterion_t">
        <description>
            Will signal a stop when the allotted time runs out.
        </description>
    </class>

    <class name="prx_planning/succeeded_criterion"
        type="prx::plan::succeeded_criterion_t"
        base_class_type="prx::plan::criterion_t">
        <description>
            Will signal a stop when the linked motion planner's succeeded() function returns true.
        </description>
    </class>

<!-- Queries -->
    <class name="prx_planning/multi_planner_query"
        type="prx::plan::multi_planner_query_t"
        base_class_type="prx::plan::query_t">
        <description>
            A query for multiple motion_planning_querys.
        </description>
    </class>

    <class name="prx_planning/motion_query"
        type="prx::plan::motion_query_t"
        base_class_type="prx::plan::query_t">
        <description>
           A query containing a motion.
        </description>
    </class>

    <class name="prx_planning/motion_planning_query"
        type="prx::plan::motion_planning_query_t"
        base_class_type="prx::plan::query_t">
        <description>
           A query for results from a motion planner.
        </description>
    </class>

    <class name="prx_planning/single_shot_query"
        type="prx::plan::single_shot_query_t"
        base_class_type="prx::plan::query_t">
        <description>
            A query for results from a single shot task planner.
        </description>
    </class>

 <!-- Specifications -->

     <class name="prx_planning/multi_planner_specification"
        type="prx::plan::multi_planner_specification_t"
        base_class_type="prx::plan::specification_t">
        <description>
            A specification for multiple motion_planning_specifications.
        </description>
    </class>

    <class name="prx_planning/motion_planning_specification"
        type="prx::plan::motion_planning_specification_t"
        base_class_type="prx::plan::specification_t">
        <description>
           A specification for a motion planner.
        </description>
    </class>

    <class name="prx_planning/single_shot_specification"
        type="prx::plan::single_shot_specification_t"
        base_class_type="prx::plan::specification_t">
        <description>
           A specification for the single shot task planner.
        </description>
    </class>


    <!-- PACKAGES -->
<class name="prx_planning/apc_tp"
    type="prx::packages::apc::apc_task_planner_t"
    base_class_type="prx::plan::planner_t">
    <description>
        The task planner that handles the APC task.
    </description>        
</class>
<class name="prx_planning/apc_planning_application"
    type="prx::packages::apc::apc_planning_application_t"
    base_class_type="prx::plan::planning_application_t">
    <description>
        The planning application for APC.
    </description>        
</class>
<class name="prx_planning/apc_sampler"
    type="prx::packages::apc::apc_sampler_t"
    base_class_type="prx::plan::sampler_t">
    <description>
        Samples IK's in a bounded region.
    </description>        
</class>
<class name="prx_planning/apc_driver_stress"
    type="prx::packages::apc::apc_driver_stress_tp_t"
    base_class_type="prx::plan::planner_t">
    <description>
        A Task Planner designed to stress the driver.
    </description>        
</class>
<class name="prx_planning/case_eval_task_planner"
    type="prx::packages::apc::case_eval_task_planner_t"
    base_class_type="prx::plan::planner_t">
    <description>
        Do the crap
    </description>        
</class>
<class name="prx_planning/apc_driver_stress_specification"
    type="prx::packages::apc::apc_driver_stress_specification_t"
    base_class_type="prx::plan::specification_t">
    <description>
        A Task Planner designed to stress the driver.
    </description>        
</class>

<class name="prx_planning/manipulation_world_model"
    type="prx::packages::manipulation::manipulation_world_model_t"
    base_class_type="prx::plan::world_model_t">
    <description>
        A world model which deals with the manipulation problems.
    </description>        
</class>

<class name="prx_planning/simple_pap_tp"
    type="prx::packages::manipulation::simple_pap_tp_t"
    base_class_type="prx::plan::planner_t">
    <description>
        A task planner for a simple pick and place manipulation problem.
    </description>        
</class>

<class name="prx_planning/simple_place_tp"
    type="prx::packages::manipulation::simple_place_tp_t"
    base_class_type="prx::plan::planner_t">
    <description>
        A task planner for a simple placement manipulation problem.
    </description>        
</class>

<class name="prx_planning/suggested_grasp_tp"
    type="prx::packages::manipulation::suggested_grasp_tp_t"
    base_class_type="prx::plan::planner_t">
    <description>
        A task planner for testing suggested grasps in the manipulation problem.
    </description>        
</class>

<class name="prx_planning/multi_pap_tp"
    type="prx::packages::manipulation::multi_pap_tp_t"
    base_class_type="prx::plan::planner_t">
    <description>
        A task planner for dual-arm multiple pick and place manipulation problems.
    </description>        
</class>

<class name="prx_planning/pap_trajectory_generator_tp"
    type="prx::packages::manipulation::pap_trajectory_generator_tp_t"
    base_class_type="prx::plan::planner_t">
    <description>
        A task planner for generating pick and place trajectories for both arms for multiple object poses.
    </description>        
</class>


<class name="prx_planning/manipulation_tp"
    type="prx::packages::manipulation::manipulation_tp_t"
    base_class_type="prx::plan::planner_t">
    <description>
        A task planner for a simple manipulation problem.
    </description>        
</class>

<class name="prx_planning/jk_tracking_tp"
    type="prx::packages::manipulation::jk_tracking_tp_t"
    base_class_type="prx::plan::planner_t">
    <description>
        A task planner for the JK-tracking trees algorithm
    </description>        
</class>


<class name="prx_planning/grasp_rrt_tp"
    type="prx::packages::manipulation::grasp_rrt_tp_t"
    base_class_type="prx::plan::planner_t">
    <description>
        A task planner for the manipulation problem using a grasp rrt.
    </description>        
</class>

<class name="prx_planning/grasp_rrt"
    type="prx::packages::manipulation::grasp_rrt_t"
    base_class_type="prx::plan::planner_t">
    <description>
        Grasp RRT.
    </description>
</class>

<class name="prx_planning/tsm_prm_star"
    type="prx::packages::manipulation::tsm_prm_star_t"
    base_class_type="prx::plan::planner_t">
    <description>
       Task Space Metric Incremental Roadmap Spanner
    </description>
</class>

<class name="prx_planning/jacobian_prm_star"
    type="prx::packages::manipulation::jacobian_prm_star_t"
    base_class_type="prx::plan::planner_t">
    <description>
        PRM* variant which plans to target poses rather than configruations.
    </description>
</class>

<class name="prx_planning/grasp_evaluation_tp"
    type="prx::packages::manipulation::grasp_evaluation_tp_t"
    base_class_type="prx::plan::planner_t">
    <description>
        A task planner for a evaluating all grasps.
    </description>        
</class>

<class name="prx_planning/pag_evaluation_tp"
    type="prx::packages::manipulation::pag_evaluation_tp_t"
    base_class_type="prx::plan::planner_t">
    <description>
        A task planner for a evaluating grasps on multiple poses of an object.
    </description>        
</class>

<class name="prx_planning/astar_test_tp"
    type="prx::packages::manipulation::astar_test_tp_t"
    base_class_type="prx::plan::planner_t">
    <description>
        A task planner for testing the validity of the constraints A*.
    </description>        
</class>

<class name="prx_planning/grasping_planner"
    type="prx::packages::manipulation::grasping_planner_t"
    base_class_type="prx::plan::planner_t">
    <description>
        A planner for dealing with grasping an object.
    </description>        
</class>

<class name="prx_planning/grasp_evaluator"
    type="prx::packages::manipulation::grasp_evaluator_t"
    base_class_type="prx::packages::manipulation::grasp_evaluator_t">
    <description>
        Grasp evaluator module
    </description>        
</class>
<class name="prx_planning/unigripper_grasp_evaluator"
    type="prx::packages::manipulation::unigripper_grasp_evaluator_t"
    base_class_type="prx::packages::manipulation::grasp_evaluator_t">
    <description>
        UniGripper Grasp evaluator module
    </description>        
</class>


<class name="prx_planning/grasp_generator"
    type="prx::packages::manipulation::grasp_generator_t"
    base_class_type="prx::packages::manipulation::grasp_generator_t">
    <description>
        Grasp generator module
    </description>        
</class>
<class name="prx_planning/unigripper_grasp_generator"
    type="prx::packages::manipulation::unigripper_grasp_generator_t"
    base_class_type="prx::packages::manipulation::grasp_generator_t">
    <description>
        UniGripper Grasp Generator module
    </description>        
</class>

<class name="prx_planning/parallel_grasp_generator"
    type="prx::packages::manipulation::parallel_grasp_generator_t"
    base_class_type="prx::packages::manipulation::grasp_generator_t">
    <description>
        Parallel Grasp Generator module
    </description>        
</class>



<class name="prx_planning/apc_grasping_planner"
    type="prx::packages::manipulation::apc_grasping_planner_t"
    base_class_type="prx::plan::planner_t">
    <description>
        A grasping planner that reasons about the different objects faces.
    </description>        
</class>

<class name="prx_planning/grasp_db_fusion_tp"
    type="prx::packages::manipulation::grasp_db_fusion_tp_t"
    base_class_type="prx::plan::planner_t">
    <description>
        A grasping planner that fuses the databases
    </description>        
</class>


<class name="prx_planning/rrt_grasping_planner"
    type="prx::packages::manipulation::rrt_grasping_planner_t"
    base_class_type="prx::plan::planner_t">
    <description>
        A planner for dealing with grasping an object with additional motion planning primitives.
    </description>        
</class>

<class name="prx_planning/face_hidden_grasping_planner"
    type="prx::packages::manipulation::face_hidden_grasping_planner_t"
    base_class_type="prx::plan::planner_t">
    <description>
        A planner for dealing with grasping an object, where the face of the object on the surface is removed.
    </description>        
</class>

<class name="prx_planning/manipulation_query"
    type="prx::packages::manipulation::manipulation_query_t"
    base_class_type="prx::plan::query_t">
    <description>
        The query for the manipulation problem.
    </description>        
</class>

<class name="prx_planning/object_constraints_checker"
    type="prx::packages::manipulation::object_constraints_checker_t"
    base_class_type="prx::plan::validity_checker_t">
    <description>
        The validity checker for the minimum constraint problem. Knows about constraints with objects in the world.
    </description>        
</class>

<class name="prx_planning/manipulation_validity_checker"
    type="prx::packages::manipulation::manipulation_validity_checker_t"
    base_class_type="prx::plan::validity_checker_t">
    <description>
        A validity checker class for manipulation, extends interface to use end-effector metrics for cc resolution.
    </description>        
</class>

<class name="prx_planning/grasping_specification"
    type="prx::packages::manipulation::grasping_specification_t"
    base_class_type="prx::plan::specification_t">
    <description>
        The specification for the grasping planner.
    </description>        
</class>

<class name="prx_planning/grasp_rrt_specification"
    type="prx::plan::grasp_rrt_specification_t"
    base_class_type="prx::plan::specification_t">
    <description>
        The specification for the grasp RRT
    </description>        
</class>


<class name="prx_planning/pose_based_mp_query"
    type="prx::packages::manipulation::pose_based_mp_query_t"
    base_class_type="prx::plan::query_t">
    <description>
        A motion planning query for reaching a target pose.
    </description>        
</class>

<class name="prx_planning/pose_based_mp_specification"
    type="prx::packages::manipulation::pose_based_mp_specification_t"
    base_class_type="prx::plan::specification_t">
    <description>
        A motion planning specification for reaching a target pose.
    </description>
</class>


<class name="prx_planning/tsm_prm_specification"
    type="prx::plan::tsm_prm_specification_t"
    base_class_type="prx::plan::specification_t">
    <description>
        The specification for the Task Space Metric PRM
    </description>
</class>

<class name="prx_planning/manipulation_specification"
    type="prx::packages::manipulation::manipulation_specification_t"
    base_class_type="prx::plan::specification_t">
    <description>
        The specification for the manipulation task planner.
    </description>        
</class>

<class name="prx_planning/simple_pap_specification"
    type="prx::packages::manipulation::simple_pap_specification_t"
    base_class_type="prx::plan::specification_t">
    <description>
        The specification for the simple pick and place task planner.
    </description>        
</class>

<class name="prx_planning/simple_place_specification"
    type="prx::packages::manipulation::simple_place_specification_t"
    base_class_type="prx::plan::specification_t">
    <description>
        The specification for the simple place task planner.
    </description>
</class>

<class name="prx_planning/ee_bound_sampler"
    type="prx::packages::manipulation::ee_bound_sampler_t"
    base_class_type="prx::plan::sampler_t">
    <description>
        Samples points while ensuring that the manipulator's end-effector stays inside given bounds.
    </description>        
</class>

<!-- <class name="prx_utilities/end_effector_distance"
    type="prx::packages::manipulation::end_effector_distance_t"
    base_class_type="prx::util::distance_function_t">
    <description>
        A distance function which uses the end-effector configuration to compute distance.
    </description>
</class> -->

<class name="prx_planning/ik_steering_local_planner"
    type="prx::plan::ik_steering_local_planner_t"
    base_class_type="prx::plan::local_planner_t">
    <description>
        Local Planning using IK steering
    </description>        
</class>

    <!-- END PACKAGES -->

</library>
