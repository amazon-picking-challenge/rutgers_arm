<!-- Auto generated launch file for Baxter: 2 1 1 -->
<launch>
  <rosparam command="load" file="$(find prx_input)/templates/spaces/space_types.yaml"/>

  <!-- = = = = = = = -->
  <!--   Simulation  -->
  <!-- = = = = = = = -->
  <!-- Load independent files -->
  <rosparam command="load" ns="simulation" file="$(find prx_input)/templates/applications/empty_application.yaml"/>
  <rosparam command="load" ns="simulation" file="$(find manipulation)/input/simulation/manipulation_simulator.yaml"/>
  <rosparam command="load" ns="simulation/simulator/subsystems/consumer/" file="$(find prx_input)/templates/controllers/consumer.yaml"/>
  <rosparam command="load" ns="simulation/simulator/subsystems/consumer/subsystems/router/" file="$(find prx_input)/templates/controllers/router.yaml"/>
  <rosparam command="load" ns="simulation/simulator/obstacles" file="$(find coordination_manipulation)/input/templates/baxter_torso_nomesh.yaml" />
  <rosparam command="load" ns="simulation/simulator/obstacles" file="$(find coordination_manipulation)/input/environments/iros_table.yaml" />

  <!-- Load template files -->
  <rosparam command="load" ns="simulation/application">
    type: coord_manip_application
    left_arm_dropoff: [0.00000000,0.80000000,0.80000000,0.70710678,0.00000000,-0.70710678,0.00000000]
    right_arm_dropoff: [0.00000000,-0.80000000,0.80000000,0.70710678,0.00000000,-0.70710678,0.00000000]
    <!-- num_assigned_objects: 4 -->
  </rosparam>
        
  <rosparam command="load" ns="simulation/plant" file="$(find coordination_manipulation)/input/templates/baxter_nomesh.yaml"/>

  <rosparam command="load" ns="simulation/simulator">
    manipulator_names:
      -
        simulator/consumer/router/baxter_1_left
      -
        simulator/consumer/router/baxter_1_right
    sensing_info:
      type: grasp_sensing_info
      sources: ["simulation_grasp_sensor"]
      update_delay: 0.02
    grasp_sensor_source: "simulation_grasp_sensor"
  </rosparam>
  <rosparam ns="simulation/simulator/sensing">
    type: sensing_model
    sensors:
      grasp_sensor1:
        type: simulated_grasp_sensor
        source: "simulation_grasp_sensor"
        sensor_delay: 0.02
  </rosparam>
  <!-- = = = = = = = -->
  <!--    Planning   -->
  <!-- = = = = = = = -->

  <!-- System Mappings -->
  <rosparam ns="planning">
    system_mapping:
    -
      pair: [simulator/consumer/router/baxter_1_left, world_model/simulator/baxter_1_left]
    -
      pair: [simulator/consumer/router/baxter_1_right, world_model/simulator/baxter_1_right]
    consumer: simulator/consumer
  </rosparam>

  <rosparam command="load" ns="planning" file="$(find prx_input)/templates/spaces/space_types.yaml"/>
  <rosparam command="load" ns="planning/world_model" file="$(find manipulation)/input/simulation/manipulation_simulator.yaml"/>
  <rosparam command="load" ns="planning" file="$(find prx_input)/templates/planning_applications/single_query_application.yaml"/>
  <rosparam command="load" ns="planning/task_planner/" file="$(find coordination_manipulation)/input/templates/naive_coord_manip_tp.yaml"/>
  <rosparam command="load" ns="planning/world_model/simulator/obstacles" file="$(find coordination_manipulation)/input/templates/baxter_torso_nomesh.yaml" />
  <rosparam command="load" ns="planning/world_model/simulator/obstacles" file="$(find coordination_manipulation)/input/environments/iros_table.yaml" />

  <!-- Load template files -->
  <rosparam command="load" ns="planning/plant" file="$(find coordination_manipulation)/input/templates/baxter_nomesh.yaml"/>

  <rosparam ns="planning">
    <!-- random_seed: 1209213229 -->
    <!-- random_seed: 780332203 -->
    random_seed: 770214389
    consumer_mapping:
      -
        pair: [simulator/consumer, full_space]
  </rosparam>

  <rosparam ns="planning/world_model/planning_contexts">
    both_arms:
      default:
        type: "hide_mapping"
    baxter_1_left:
      default:
        type: "hide_mapping"
    baxter_1_right:
      default:
        type: "hide_mapping"
    imaginary_cup_left:
      default:
        type: "hide_mapping"
    imaginary_cup_right:
      default:
        type: "hide_mapping"
    left_armcup:
      default:
        type: "hide_mapping"
    right_armcup:
      default:
        type: "hide_mapping"
  </rosparam>

  <rosparam ns="planning/task_planner">
    experiment: "IROS_TABLE"
    num_left_arm_plans: 42
    num_right_arm_plans: 42
    left_arm_plans: "plans/left/"
    right_arm_plans: "plans/right/"
    <!-- left_arm_tasks: [8,3] -->
    <!-- right_arm_tasks: [15, 21] -->
    left_arm_tasks: [34,15,38,21]  
    right_arm_tasks: [8,26,3,22] 
    <!-- left_arm_tasks: [15, 21] -->
    <!-- right_arm_tasks: [8, 26] -->
    scheduling_type: "NONE"
    coordination_type: "PRM_MAX"
    selection_type: "LONGEST"
    minimization_type: "JOINT"
    planners:
      coordination_planner:
        type: coordination_prm
        heuristic_search: 
          type: coordination_astar
        bias_right_percentage: 0.1
        bias_left_percentage: 0.1
        dices_to_roll: 500
  </rosparam>

  <rosparam ns="planning/problems">
    benchmark_problem:
      specification:
        type: "motion_planning_specification"
        sampler:
          type: uniform_sampler
        validity_checker:
          type: world_model_validity_checker
        distance_metric:
          type: linear_distance_metric
          distance_function: manhattan_distance
        local_planner:
          type: bvp_local_planner
        stopping_criteria:
          elements:
            criterion1:
              type: iteration_criterion
              condition: 100
      query:
        type: "coordination_prm_query"
        query_type: "add_query_points_no_collisions"
        query_collision_type: "no_collisions"
        goal:
          type: "goal_state"
          distance_metric:
            type: linear_distance_metric
  </rosparam>

  <rosparam command="load" ns="planning/world_model/simulator">
    manipulator_names:
      -
        simulator/baxter_1_left
      -
        simulator/baxter_1_right
    sensing_info:
      type: grasp_sensing_info
      sources: ["planner_grasp_sensor"]
      update_delay: 0.02
    grasp_sensor_source: "planner_grasp_sensor"
  </rosparam>
  <rosparam ns="planning/world_model/simulator/sensing">
    type: sensing_model
    sensors:
      grasp_sensor2:
        type: simulated_grasp_sensor
        source: "planner_grasp_sensor"
        sensor_delay: 0.02
  </rosparam>

                
  <rosparam command="load" ns="planning/world_model/simulator/subsystems/baxter_1_left">
    template: "plant"
    planning_contexts:
      baxter_1_left:
        type: "full_mapping"
      left_armcup:
        type: "full_mapping"
      both_arms:
        type: "full_mapping"
    initial_state: [1.5681561256801836989893673,-0.6933267886173464233934283,-0.8849957765343199334040492,1.9000335039215263677192524,-2.2107340224187499444497007,-0.8368545446250841290947164,0.9573491235931878007292539,0.0000000000000000000000000]
    hand: left
    forward_transform_rotation: [1.0,0,0,0,1.0,0,0,0,1]
    forward_transform_translation: [0,0,0.785]  
  </rosparam>

  <rosparam command="load" ns="planning/world_model/simulator/subsystems/baxter_1_right">
    template: "plant"
    planning_contexts:
      baxter_1_right:
        type: "full_mapping"
      right_armcup:
        type: "full_mapping"
      both_arms:
        type: "full_mapping"
    initial_state:  [-1.6812774859126198290226739,-0.5125644883535177553923745,1.0773961507954412653020881,1.8738453488311539452126908,1.9879612960600967497271085,-0.9987250827246928475133814,-0.8436528393489071131483570,0.000000000000]
    hand: right
    forward_transform_rotation: [1.0,0,0,0,1.0,0,0,0,1]
    forward_transform_translation: [0,0,0.785]  
  </rosparam>

  <!-- = = = = = = = -->
  <!--  Environment  -->
  <!-- = = = = = = = -->

  <!-- Baxter 1-->
  <rosparam command="load" ns="simulation/simulator/subsystems/consumer/subsystems/router/subsystems/baxter_1_left">
    template: "plant"
    initial_state: [1.5681561256801836989893673,-0.6933267886173464233934283,-0.8849957765343199334040492,1.9000335039215263677192524,-2.2107340224187499444497007,-0.8368545446250841290947164,0.9573491235931878007292539,0.0000000000000000000000000]
    hand: left
    forward_transform_rotation: [1.0,0,0,0,1.0,0,0,0,1]
    forward_transform_translation: [0,0,0.785]  
  </rosparam>

  <rosparam command="load" ns="simulation/simulator/subsystems/consumer/subsystems/router/subsystems/baxter_1_right">
    template: "plant"
    initial_state:  [-1.6812774859126198290226739,-0.5125644883535177553923745,1.0773961507954412653020881,1.8738453488311539452126908,1.9879612960600967497271085,-0.9987250827246928475133814,-0.8436528393489071131483570,0.000000000000]
    hand: right
    forward_transform_rotation: [1.0,0,0,0,1.0,0,0,0,1]
    forward_transform_translation: [0,0,0.785]  
  </rosparam>

<!-- LEFT ARM CUPS BLUE  -->
<rosparam command="load" ns="simulation/simulator/subsystems/cup1">
  type: movable_body
  integrator: rk4
  max_step: 0.01
  state_space: 
    min: [-5, -5, -100, -1, -1, -1, -1]
    max: [5, 5, 100, 1, 1, 1, 1]
    scale: [1.0, 1.0, 1.0, 0.05, 0.05, 0.05, 0.05]
  input_control_space: 
    none: 4
  root_geom: body
  geometries:
    -
      name: body
      collision_geometry:
        type: box
        dims: [0.055 , 0.03 , 0.12]
        material: red
  initial_state: [0.42000000,0.16000000,0.86000000,0.70710678,0.00000000,-0.70710678,0.00000000]
</rosparam>

<rosparam command="load" ns="simulation/simulator/subsystems/cup2">
  type: movable_body
  integrator: rk4
  max_step: 0.01
  state_space: 
    min: [-5, -5, -100, -1, -1, -1, -1]
    max: [5, 5, 100, 1, 1, 1, 1]
    scale: [1.0, 1.0, 1.0, 0.05, 0.05, 0.05, 0.05]
  input_control_space: 
    none: 4
  root_geom: body
  geometries:
    -
      name: body
      collision_geometry:
        type: box
        dims: [0.055 , 0.03 , 0.12]
        material: red
  initial_state: [0.42000000,0.06000000,0.86000000,0.70710678,0.00000000,-0.70710678,0.00000000]
</rosparam>

<rosparam command="load" ns="simulation/simulator/subsystems/cup3">
  type: movable_body
  integrator: rk4
  max_step: 0.01
  state_space: 
    min: [-5, -5, -100, -1, -1, -1, -1]
    max: [5, 5, 100, 1, 1, 1, 1]
    scale: [1.0, 1.0, 1.0, 0.05, 0.05, 0.05, 0.05]
  input_control_space: 
    none: 4
  root_geom: body
  geometries:
    -
      name: body
      collision_geometry:
        type: box
        dims: [0.055 , 0.03 , 0.12]
        material: blue
  initial_state: [0.72000000,-0.16000000,0.86000000,0.70710678,0.00000000,-0.70710678,0.00000000]
</rosparam>

<rosparam command="load" ns="simulation/simulator/subsystems/cup4">
  type: movable_body
  integrator: rk4
  max_step: 0.01
  state_space: 
    min: [-5, -5, -100, -1, -1, -1, -1]
    max: [5, 5, 100, 1, 1, 1, 1]
    scale: [1.0, 1.0, 1.0, 0.05, 0.05, 0.05, 0.05]
  input_control_space: 
    none: 4
  root_geom: body
  geometries:
    -
      name: body
      collision_geometry:
        type: box
        dims: [0.055 , 0.03 , 0.12]
        material: blue
  initial_state: [0.72000000,-0.08000000,0.86000000,0.70710678,0.00000000,-0.70710678,0.00000000]
</rosparam>


<!-- RIGHT ARM CUPS RED-->
<rosparam command="load" ns="simulation/simulator/subsystems/cup5">
  type: movable_body
  integrator: rk4
  max_step: 0.01
  state_space: 
    min: [-5, -5, -100, -1, -1, -1, -1]
    max: [5, 5, 100, 1, 1, 1, 1]
    scale: [1.0, 1.0, 1.0, 0.05, 0.05, 0.05, 0.05]
  input_control_space: 
    none: 4
  root_geom: body
  geometries:
    -
      name: body
      collision_geometry:
        type: box
        dims: [0.055 , 0.03 , 0.12]
        material: red
  initial_state: [0.72000000,0.20000000,0.86000000,0.70710678,0.00000000,-0.70710678,0.00000000]
</rosparam>

<rosparam command="load" ns="simulation/simulator/subsystems/cup6">
  type: movable_body
  integrator: rk4
  max_step: 0.01
  state_space: 
    min: [-5, -5, -100, -1, -1, -1, -1]
    max: [5, 5, 100, 1, 1, 1, 1]
    scale: [1.0, 1.0, 1.0, 0.05, 0.05, 0.05, 0.05]
  input_control_space: 
    none: 4
  root_geom: body
  geometries:
    -
      name: body
      collision_geometry:
        type: box
        dims: [0.055 , 0.03 , 0.12]
        material: red
  initial_state: [0.72000000,0.12000000,0.86000000,0.70710678,0.00000000,-0.70710678,0.00000000]
</rosparam>

<rosparam command="load" ns="simulation/simulator/subsystems/cup7">
  type: movable_body
  integrator: rk4
  max_step: 0.01
  state_space: 
    min: [-5, -5, -100, -1, -1, -1, -1]
    max: [5, 5, 100, 1, 1, 1, 1]
    scale: [1.0, 1.0, 1.0, 0.05, 0.05, 0.05, 0.05]
  input_control_space: 
    none: 4
  root_geom: body
  geometries:
    -
      name: body
      collision_geometry:
        type: box
        dims: [0.055 , 0.03 , 0.12]
        material: blue
  initial_state: [0.42000000,-0.12000000,0.86000000,0.70710678,0.00000000,-0.70710678,0.00000000]
</rosparam>

<rosparam command="load" ns="simulation/simulator/subsystems/cup8">
  type: movable_body
  integrator: rk4
  max_step: 0.01
  state_space: 
    min: [-5.5, -5.5, -100, -1, -1, -1, -1]
    max: [5.5, 5.5, 100, 1, 1, 1, 1]
    scale: [1.0, 1.0, 1.0, 0.05, 0.05, 0.05, 0.05]
  input_control_space: 
    none: 4
  root_geom: body
  geometries:
    -
      name: body
      collision_geometry:
        type: box
        dims: [0.055 , 0.03 , 0.12]
        material: blue
  initial_state: [0.42000000,-0.20000000,0.86000000,0.70710678,0.00000000,-0.70710678,0.00000000]
</rosparam>

<rosparam command="load" ns="planning/world_model/simulator/subsystems/imaginary_cup_left">
  type: movable_body
  planning_contexts:
    imaginary_cup_left:
      type: "full_mapping"
    left_armcup:
      type: "full_mapping"
  integrator: rk4
  max_step: 0.01
  state_space: 
    min: [-5.5, -5.5, -100, -1, -1, -1, -1]
    max: [5.5, 5.5, 100, 1, 1, 1, 1]
    scale: [1.0, 1.0, 1.0, 0.05, 0.05, 0.05, 0.05]
  input_control_space: 
    none: 4
  root_geom: body
  geometries:
    -
      name: body
      collision_geometry:
        type: box
        dims: [0.055 , 0.03 , 0.12]
        material: red
  initial_state: [-5.0,-5.0,-5.0,0.70710678,0.00000000,-0.70710678,0.00000000]
</rosparam>

<rosparam command="load" ns="planning/world_model/simulator/subsystems/imaginary_cup_right">
  type: movable_body
  planning_contexts:
    imaginary_cup_right:
      type: "full_mapping"
    right_armcup:
      type: "full_mapping"
  integrator: rk4
  max_step: 0.01
  state_space: 
    min: [-5.5, -5.5, -100, -1, -1, -1, -1]
    max: [5.5, 5.5, 100, 1, 1, 1, 1]
    scale: [1.0, 1.0, 1.0, 0.05, 0.05, 0.05, 0.05]
  input_control_space: 
    none: 4
  root_geom: body
  geometries:
    -
      name: body
      collision_geometry:
        type: box
        dims: [0.055 , 0.03 , 0.12]
        material: red
  initial_state: [5.0,5.0,5.0,0.70710678,0.00000000,-0.70710678,0.00000000]
</rosparam>
          
  <!-- = = = = = = = -->
  <!-- Visualization -->
  <!-- = = = = = = = -->
  <include file="$(find baxter)input/visualization.launch"/>

  <!-- Define the simulation node -->
  <node name="simulation" pkg="prx_simulation" type="prx_simulation" required="true" launch-prefix="" output="screen" args="simulation" />
  <node name="planning" pkg="prx_planning" type="prx_planning" required="true" launch-prefix="gdb --args" output="screen" args="planning" />

</launch>

