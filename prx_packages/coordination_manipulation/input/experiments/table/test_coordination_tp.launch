<!-- Auto generated launch file for Baxter: 2 1 1 -->
<launch> 
  <rosparam command="load" file="$(find prx_input)/templates/spaces/space_types.yaml"/>

  <rosparam ns="simulation" command="load" file="$(find manipulation)/input/manipulation_simulator.yaml"/>  
  <rosparam command="load" ns="simulation/simulator/subsystems/consumer" file="$(find prx_input)/templates/controllers/consumer.yaml"/>
  <rosparam command="load" ns="simulation/simulator/subsystems/consumer/subsystems/manipulator" file="$(find manipulation)/input/baxter/baxter.yaml"/>
  <rosparam command="load" ns="simulation/cup_object" file="$(find manipulation)/input/objects/cup.yaml"/>
  <rosparam command="load" ns="simulation/crayola_object" file="$(find manipulation)/input/objects/crayola.yaml"/>
  <rosparam command="load" ns="simulation/simulator/obstacles" file="$(find coordination_manipulation)/input/environments/iros_table.yaml"/>

  <rosparam command="load" ns="simulation/application">
    type: coord_manip_application
    left_arm_dropoff: [0.00000000,0.80000000,0.80000000,-0.70710678,0.00000000,-0.70710678,0.00000000]
    right_arm_dropoff: [0.00000000,-0.80000000,0.80000000,-0.70710678,0.00000000,-0.70710678,0.00000000]
  </rosparam>

  <rosparam command="load" ns="simulation/simulator/subsystems/box1">
    template: "crayola_object"
    initial_state: [0.394129,-0.390334,0.9,0,0,-0.914169,0.405333]
  </rosparam>


  <rosparam command="load" ns="simulation/simulator/subsystems/box2">
    template: "crayola_object"
    initial_state: [0.481018,0.332088,0.9,0,0,0.802622,0.596488]
  </rosparam>

  <rosparam command="load" ns="simulation/simulator/subsystems/box3">
    template: "crayola_object"
    initial_state: [0.661413,0.00680069,0.9,0,0,0.878227,0.478244]
  </rosparam>


  <rosparam command="load" ns="simulation/simulator/subsystems/box4">
    template: "crayola_object"
    initial_state: [0.485934,-0.0801496,0.9,0,0,0.957791,0.287464]
  </rosparam>

  <rosparam command="load" ns="simulation/simulator/subsystems/cup1">
    template: "cup_object"
    initial_state: [0.494522,-0.459948,0.86,-0.4039,0.580401,0.403901,0.580399]
  </rosparam>


  <rosparam command="load" ns="simulation/simulator/subsystems/cup2">
    template: "cup_object"
    initial_state: [0.370896,0.681369,0.86,0.2641,0.655936,-0.264101,0.655934]
  </rosparam>

  <rosparam command="load" ns="simulation/simulator/subsystems/cup3">
    template: "cup_object"
    initial_state: [0.682722,-0.338962,0.86,-0.707075,0.00652129,0.707078,0.00652126]
  </rosparam>


  <rosparam command="load" ns="simulation/simulator/subsystems/cup4">
    template: "cup_object"
    initial_state: [0.577632,0.177752,0.86,0.0336969,0.706305,-0.033697,0.706302]
  </rosparam>


  <rosparam ns="simulation/simulator/subsystems/consumer">
    keep_last_control: false
  </rosparam>

  <rosparam ns="simulation/simulator/subsystems/consumer/subsystems/manipulator">
    initial_state: [1.5681561256801836989893673,-0.6933267886173464233934283,-0.8849957765343199334040492,1.9000335039215263677192524,-2.2107340224187499444497007,-0.8368545446250841290947164,0.9573491235931878007292539,-1.6812774859126198290226739,-0.5125644883535177553923745,1.0773961507954412653020881,1.8738453488311539452126908,1.9879612960600967497271085,-0.9987250827246928475133814,-0.8436528393489071131483570, 1,1]
    planning_contexts:
        manipulator_pc:
          type: "full_mapping"
  </rosparam>

  <node name="simulation" pkg="prx_simulation" type="prx_simulation" required="true" launch-prefix="" output="screen" args="simulation"/>
  <rosparam command="load" file="$(find prx_input)/templates/spaces/space_types.yaml"/>

  <!-- = = = = = = = -->
  <!--    planning   -->
  <!-- = = = = = = = -->

  <rosparam command="load" ns="planning" file="$(find prx_input)/templates/planning_applications/single_query_application.yaml" />
  <rosparam command="load" ns="planning/world_model" file="$(find manipulation)/input/manipulation_simulator.yaml"/>  
  <rosparam command="load" ns="planning/world_model/simulator/subsystems/manipulator" file="$(find manipulation)/input/baxter/baxter.yaml"/>
  <rosparam command="load" ns="planning/cup_object" file="$(find manipulation)/input/objects/cup.yaml"/>
  <rosparam command="load" ns="planning/crayola_object" file="$(find manipulation)/input/objects/crayola.yaml"/>
  <rosparam command="load" ns="planning/task_planner/" file="$(find coordination_manipulation)/input/templates/coordination_constraint_tp.yaml"/>
  <rosparam command="load" ns="planning/world_model/simulator/obstacles" file="$(find coordination_manipulation)/input/environments/iros_table.yaml" />

  <rosparam ns="planning">
    simulate: true
    visualize: true
    persistent: true
    system_mapping:
      -
        pair: [simulator/consumer/manipulator, world_model/simulator/manipulator]
      -
        pair: [simulator/box2, world_model/simulator/box2]
    consumer: simulator/consumer
    consumer_mapping:
      - 
        pair: [simulator/consumer, manipulator_pc]
    world_model:
      type: manipulation_world_model
      num_ik_seeds: 10
      IK_databases:
        baxter_database:
          distance_metric:
            type: linear_distance_metric
          manipulator: manipulator
          samples: 10000
          deserialize_file: baxter[20000].database
  </rosparam>


  <rosparam ns="planning/world_model/planning_contexts">
    manipulator_pc:
      default:
        type: "hide_mapping"
    left_full_arm:
      default:
        type: "obstacle_mapping"
      manipulation_context_info:
        full_arm_context_name: "left_full_arm"
        arm_context_name: "left_arm"
        end_effector_context_name: "left_end_effector"
        start_link: "base"
        end_link: "end_effector_left"
        ik_database: baxter_database
        left_arm_ik: true
    left_arm:
      default:
       type: "obstacle_mapping"
    left_arm_planning:
      default:
        type: "hide_mapping"
    left_end_effector:
      default:
       type: "hide_mapping"
    right_full_arm:
      default:
        type: "obstacle_mapping"
      manipulation_context_info:
        full_arm_context_name: "right_full_arm"
        arm_context_name: "right_arm"
        end_effector_context_name: "right_end_effector"
        start_link: "base"
        end_link: "end_effector_right"
        ik_database: baxter_database
        left_arm_ik: false
    right_arm:
      default:
       type: "obstacle_mapping"
    right_arm_planning:
      default:
        type: "hide_mapping"
    right_end_effector:
      default:
       type: "hide_mapping"
  </rosparam>

  <rosparam ns="planning/task_planner">
    naive: true
    number_of_experiments: 1
    total_new_experiments: 1
    full_manipulator_context_name: "manipulator_pc"
    left_context_name: "left_full_arm"
    right_context_name: "right_full_arm"
    object_types: ["cup", "crayola"]
    num_plans_per_object_type: [20,20]
    scheduling_type: "RANDOM"
    selection_type: "NONE"
    bias_type: "JOINT"
    experiment: "TABLE"
    plans_directory: "/prx_packages/coordination_manipulation/input/experiments/table/plans/"
    results_file: "table_Naive_8k_results.txt"
    left_arm_tasks: [12,10,3,16]
    left_arm_objects: ["crayola", "crayola", "cup", "cup"]
    right_arm_tasks: [19,10,7,17]
    right_arm_objects: ["crayola", "crayola", "cup", "cup"]
    constraints_directory: "/prx_packages/coordination_manipulation/input/experiments/table/coordination_constraints/"
  </rosparam>

  <rosparam ns="planning/problems">
    benchmark_problem:
      specification:
        type: "motion_planning_specification"
        sampler:
          type: uniform_sampler
        validity_checker:
          type: world_model_validity_checker
        distance_metric:
          type: linear_distance_metric
          distance_function: manhattan_distance
        local_planner:
          type: bvp_local_planner
        stopping_criteria:
          elements:
            criterion1:
              type: iteration_criterion
              condition: 100
      query:
        type: "motion_planning_query"
        query_type: "add_query_points_no_collisions"
        query_collision_type: "no_collisions"
  </rosparam>

  <rosparam ns="planning/world_model/simulator/subsystems/manipulator">
    initial_state: [1.5681561256801836989893673,-0.6933267886173464233934283,-0.8849957765343199334040492,1.9000335039215263677192524,-2.2107340224187499444497007,-0.8368545446250841290947164,0.9573491235931878007292539,-1.6812774859126198290226739,-0.5125644883535177553923745,1.0773961507954412653020881,1.8738453488311539452126908,1.9879612960600967497271085,-0.9987250827246928475133814,-0.8436528393489071131483570, 1,1]
    planning_contexts:
      manipulator_pc:
        type: "full_mapping"
      left_full_arm:
        type: "baxter_left_full_arm_state_mapping"
      left_arm:
        type: "baxter_left_arm_state_mapping"
      left_end_effector:
        type: "baxter_left_gripper_state_mapping"
      left_arm_planning:
        type: "baxter_left_arm_state_mapping"
      right_full_arm:
        type: "baxter_right_full_arm_state_mapping"
      right_arm:
        type: "baxter_right_arm_state_mapping"
      right_end_effector:
        type: "baxter_right_gripper_state_mapping"
      right_arm_planning:
        type: "baxter_right_arm_state_mapping"
  </rosparam>
  
  <rosparam command="load" ns="planning/world_model/simulator/subsystems/box2">
    template: "cup_object"
    initial_state: [-4,-4,-4,0,0,-0.532765,0.846263]
  </rosparam>

  <node name="planning" pkg="prx_planning" type="prx_planning" required="true" launch-prefix="gdb --args" output="screen" args="planning"/>

  <include file="$(find prx_input)/templates/visualization/visualization.launch"/>

  <rosparam ns="visualization/viewer/">
    windows:
      window_1:
        xpos: 920
        ypos: 100
        width: 1000
        height: 1000
        cameras:
          perspective:
            ortho: false
            camera_type: 0
            eye: [0, 0, 1.8]
            center: [1, 0, 0]
            speed: {move: 0.1, rotate: 0.001}
          orthographic:
            ortho: true
            ortho_param:
              left: -300
              right: 300
              bottom: -300
              top: 300
              zNear: 0
              zFar: 1000
            speed: {move: 0.2, rotate: 0.001}
          smooth:
            ortho: false
            camera_type: 2
            eye: [0, -20, 15]
            center: [0, 1, 18]
            speed: {move: 0.2, rotate: 0.001}
  </rosparam>

</launch>

