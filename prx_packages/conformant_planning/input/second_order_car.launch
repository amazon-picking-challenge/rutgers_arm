<launch>
 <rosparam file="$(find prx_input)/templates/spaces/space_types.yaml"/>

<rosparam ns="simulation" file="$(find prx_input)/templates/applications/empty_application.yaml"/>
<rosparam ns="simulation" file="$(find prx_input)/templates/simulators/default_simulator.yaml"/>
<rosparam ns="simulation/controller" file="$(find prx_input)/templates/controllers/consumer.yaml"/>
<rosparam ns="simulation/plant" file="$(find prx_input)/templates/plants/second_order_car.yaml"/>

<rosparam ns="simulation/simulator/subsystems/consumer">
  template: "controller"
  keep_last_control: false
  keep_last_state: true
</rosparam>

<rosparam ns="simulation/simulator/subsystems/consumer/subsystems/rover">
template: "plant"
z: .3
initial_state: [-25,0,0,0,0]
</rosparam>


  <rosparam ns="simulation/simulator/obstacles" file="$(find conformant_planning)/input/templates/car_cooridor.yaml" />

  <rosparam ns="planning" file="$(find prx_input)/templates/planning_applications/single_query_application.yaml"/>

<rosparam ns="planning">
random_seed: 1
consumer_mapping:
  - 
    pair: [simulator/consumer, true_space]
</rosparam>
        
  <!-- Load template files -->
       
  <rosparam ns="planning/motion_planner/" file="$(find prx_input)/templates/motion_planners/sst.yaml"/>
 
  <rosparam ns="planning/task_planner/" file="$(find prx_input)/templates/task_planners/single_shot.yaml"/>

  <rosparam ns="planning/task_planner/" >
    stats_criteria:
      elements:
        criterion1:
          condition: 200
          type: iteration_criterion
  </rosparam>

<rosparam ns="planning/task_planner/planners/" >
planner1:
  template: "motion_planner"
  type: esst
  space_name: "true_space"
  visualization_body: "simulator/controller/rover/chassis"
  visualize_tree: false
  visualize_solution: true
  sample_metric:
    type: naive_octree
    distance_function: emd_distance
    state_size: 5
    threshold: .4
  max_points: 10000
  delta_drain: .5
  steering: false
  delta_near: 10
  probability_threshold: .8
  path_cost_weight: 1
  collision_weight: 0
  selection_weight: 1
  density_weight: 0
  order_weight: 1
  cost_weight: 1
  state_size: 5
  particle_tree: false
</rosparam>
       
  <rosparam ns="planning/query_type" file="$(find prx_input)/templates/queries/motion_planning_query.yaml"/>
<rosparam ns="planning/problems">
problem1:
  specification:
    type: motion_planning_specification
    validity_checker: 
      type: esst_validity_checker
      cost_function: duration_cost
      state_size: 5
      num_states: 150
      boundary_check: false
      plant_context: disk
      collision_threshold: .2
      collision_metric:
        type: graph_distance_metric
    sampler:
      type: esst_sampler
    distance_metric:
      type: naive_octree
      distance_function: emd_distance
      state_size: 5
      threshold: .4
    local_planner:
      type: time_varying_local_planner
      lower_multiple: 20
      upper_multiple: 50
    seeds:
      -
        state: [-25,0,0,0,0]
    stopping_criteria:
      elements:
        criterion1:
          type: timed_criterion
          condition: 300
  query:
    template: "query_type"
    start_state: [-25,0,0,0,0]
    goal:
      #type: "bounded_goal_region"
      type: particle_goal
      distance_metric:
        type: ann_distance_metric
      radius: 10
      accepted_threshold: .6
      state_size: 5
      goal_state: [25,0,0,0,0]
</rosparam>

<rosparam ns="planning">
  system_mapping:
  - 
    pair: [simulator/consumer/rover, world_model/simulator/controller/rover]

  consumer: simulator/consumer
</rosparam>

<rosparam ns="planning/world_model/planning_contexts">
true_space:
  default:
    type: "full_mapping"
disk:
  default:
    type: "hide_mapping"
</rosparam>
  <rosparam ns="planning/world_model" file="$(find prx_input)/templates/simulators/default_simulator.yaml"/>


  <rosparam ns="planning/world_model/simulator/obstacles" file="$(find conformant_planning)/input/templates/car_cooridor.yaml" />


  <rosparam ns="planning/world_model/simulator/subsystems/controller" >
  type: particle_controller
  number_of_states: 150
  control_variance: [.05,.002]
  </rosparam>
  <rosparam ns="planning/world_model/simulator/subsystems/controller/subsystems/rover" file="$(find prx_input)/templates/plants/second_order_car.yaml"/>  
  <rosparam ns="planning/world_model/simulator/subsystems/controller/subsystems/rover" >
  planning_contexts:
    disk:
      type: full_mapping
  </rosparam>

<node name="simulation" pkg="prx_simulation" type="prx_simulation" required="true" launch-prefix="" output="screen" args="simulation"/>

<node name="planning" pkg="prx_planning" type="prx_planning" required="false" launch-prefix="" output="screen" args="planning" />

<include file="$(find prx_input)/templates/visualization/visualization.launch"/>


</launch>