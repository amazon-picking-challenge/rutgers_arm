<launch>

  <rosparam command="load" file="$(find prx_input)/templates/spaces/space_types.yaml"/>  


  <rosparam command="load" ns="simulation" file="$(find prx_input)/templates/applications/empty_application.yaml"/> 
  <rosparam command="load" ns="simulation" file="$(find labeled_rearrangement)/input/simulation/manipulation_simulator.yaml"/>  
  <rosparam command="load" ns="simulation" file="$(find prx_input)/templates/spaces/space_types.yaml"/>    

  <rosparam command="load" ns="simulation/motoman" file="$(find labeled_rearrangement)/input/templates/motoman.yaml"/>

  <rosparam command="load" ns="simulation/simulator">
    fake_planning: false
    manipulator_names:
      -
        simulator/consumer/manipulator
    manipulation_sensing_info:
      type: grasp_sensing_info
      sources: ["grasp_sensor1"]
      update_delay: 0.02
    grasp_sensor_source: "grasp_sensor1"
    # sensing_info:
    #   type: point_cloud_sensing_info
    #   sources: ["point_cloud"]
    #   update_delay: 0.1
    sensing:
      type: sensing_model
      sensors:
        # point_cloud_sensor:
        #   type: point_cloud_sensor
        #   source: "point_cloud"
        #   topic_name: "/point_cloud"
        #   obstacle_geometry: "simulator/obstacles/map/point_cloud"
        #   sensor_delay: 0.1
        grasp_sensor1:
          type: simulated_grasp_sensor
          source: "grasp_sensor1"
          sensor_delay: 0.02
    # collision_checker:
    #   type: fcl
    #   octomap_resolution: 0.005
  </rosparam>

  <rosparam command="load" ns="simulation/simulator/subsystems/consumer" file="$(find prx_input)/templates/controllers/consumer.yaml"/>
  
  <rosparam command="load" ns="simulation/simulator/subsystems/consumer/subsystems/manipulator">
    template: "motoman"
    planning_contexts:
      manipulator_pc:
        type: "full_mapping"    
  </rosparam>

  <rosparam command="load" ns="simulation/simulator/obstacles" file="$(find labeled_rearrangement)/input/environments/rss_table_setup.yaml" />   

  <!-- This is the file for different start and goal positions -->

  <rosparam command="load" ns="simulation/cup">
    type: movable_body
    integrator: rk4
    max_step: 0.01
    state_space: 
      min: [-10, -10, -100, -1, -1, -1, -1]
      max: [10, 10, 100, 1, 1, 1, 1]
      scale: [0.025, 0.025, 0.05, 0.5, 0.5, 0.5, 0.5]
    input_control_space: 
      none: 4
    root_geom: body
  </rosparam>

  <rosparam command="load" ns="simulation/simulator/subsystems/cup1">
    template: "cup"
    initial_state: [0.55,0.75,3.4775,0.5,0.5,-0.5,-0.5]
    geometries:
      -
        name: body
        collision_geometry:
          # type: cylinder
          # radius: 0.02
          # height: 0.14
          type: box
          dims: [0.055 , 0.03 , 0.12]
          material: red
  </rosparam>

  <rosparam ns="simulation/simulator/" >
    check_poses:
      -
        pose: [-0.2100000000,0.8700000000,0.5750000000,0.7071067812,0.0000000000,-0.7071067812,0.0000000000]



    check_states:
      -
        state: [0.0546547677637532688943445,2.9790229923208069173767853,-0.9286747428119164204929348,-0.9808385217351862639389992,-1.8387865924628485903014052,0.2019506464320003913393009,0.6561594449462748723789218,2.2930774081943319231413625,1.5700000000000000621724894,0.0000000000000000000000000,0.0000000000000000000000000,-1.6999999999999999555910790,0.0000000000000000000000000,0.0000000000000000000000000,0.0000000000000000000000000,0.8007096945932912213095278,1.0000000000000000000000000]
      -
        state: [0.0557473171,2.9809832872,-0.9276764770,-0.9763640513,-1.8282261627,0.2049132273,0.6524275332,2.2966745984,1.5700000000,0.0000000000,0.0000000000,-1.7000000000,0.0000000000,0.0000000000,0.0000000000,0.8014357185,0.0000000000]      
      -
        state: [0.5269246630514659024413504,3.1362097839999885096062826,-0.9552969845648151547834459,-1.0900844816206352039245076,-1.3905592561187294364799527,-0.6847109931830648310580045,1.0255780848552809025875376,2.1882785168408340759071962,1.5700000000000000621724894,0.0000000000000000000000000,0.0000000000000000000000000,-1.6999999999999999555910790,0.0000000000000000000000000,0.0000000000000000000000000,0.0000000000000000000000000,0.9412741475968214865943651,1.0000000000000000000000000]
      -
        state: [0.5300744359,3.1410000000,-0.9586706760,-1.0751257677,-1.3726911500,-0.6683388292,1.0188862547,2.1931565740,1.5700000000,0.0000000000,0.0000000000,-1.7000000000,0.0000000000,0.0000000000,0.0000000000,0.9424997936,0.0000000000]

  </rosparam>

  <include ns="planning" file="$(find labeled_rearrangement)/input/planning/world_models/world_model_1k.launch"/>
  
  <rosparam command="load" ns="planning/problems/rearrangement_manipulation_problem/specification">
    k: 1
    b: 0
    initial_poses:
      -
        pose: [0.55,0.75,3.4775,0.5,0.5,-0.5,-0.5]
    target_poses:
      -
        pose: [0.55,0.75,3.4775,0.5,0.5,-0.5,-0.5]
  </rosparam>


  <!-- Define the simulation node -->
  <node name="simulation" pkg="prx_simulation" type="prx_simulation" 
    required="true" launch-prefix="gdb --args" output="screen" args="simulation"/>


  <include file="$(find prx_input)/templates/visualization/visualization.launch"/>
  <rosparam command="load" ns="/visualization/viewer/scene" file="$(find labeled_rearrangement)/input/templates/rss_materials.yaml"/>

  <rosparam ns="visualization/viewer/">
    windows:
      window_1:
        xpos: 920
        ypos: 100
        width: 1000
        height: 1000
        cameras:
          perspective:
            ortho: false
            camera_type: 0
            eye: [0, 0, 1.8]
            center: [1, 0, 0]
            speed: {move: 0.1, rotate: 0.001}
          orthographic:
            ortho: true
            ortho_param:
              left: -300
              right: 300
              bottom: -300
              top: 300
              zNear: 0
              zFar: 1000
            speed: {move: 0.2, rotate: 0.001}
          smooth:
            ortho: false
            camera_type: 2
            eye: [0, -20, 15]
            center: [0, 1, 18]
            speed: {move: 0.2, rotate: 0.001}
  </rosparam>

  <rosparam ns="visualization/viewer/scene">
    line_thickness: 3
  </rosparam>

</launch>