<!-- This file has been tested on PRACSYS revision  -->

<launch>

  <rosparam command="load" file="$(find prx_input)/templates/spaces/space_types.yaml"/>

  <rosparam ns="simulation/simulator/obstacles" file="$(find manipulation)/input/shelf.yaml"/>

  <rosparam command="load" ns="simulation" file="$(find prx_input)/templates/applications/empty_application.yaml"/>
  <!-- <rosparam command="load" ns="simulation" file="$(find prx_input)/templates/simulators/default_simulator.yaml"/> -->
  <rosparam ns="simulation" command="load" file="$(find manipulation)/input/manipulation_simulator.yaml"/>  

  <rosparam command="load" ns="simulation/controller" file="$(find prx_input)/templates/controllers/consumer.yaml"/>
  <rosparam command="load" ns="simulation/plant" file="$(find manipulation)/input/motoman/motoman_complete_kinect_reflex.yaml"/>


  <rosparam command="load" ns="simulation/simulator/subsystems/consumer">
    template: "controller"
  </rosparam>
  <rosparam command="load" ns="simulation/simulator/subsystems/consumer/subsystems/manipulator">
    template: "plant"
    initial_state: [-0.3696969,-1.8434239,-1.4583325,-1.8129914,2.0006464,0.8294958,-0.5998616,0.7427207,0.0856574,1.5700000,0.0000000,0.0000000,-1.7000000,0.0000000,0.0000000,0.0000000,2.0000000,1.0000000]
    #initial_state: [-0.7974089819460217221092080,-0.9013495826634345675643090,0.1026182516955855827944788,0.8136677140433654642492911,-1.8146935427629826698137094,0.3887659308448272454938888,1.0850833181688022133215554,-2.0680691371988828564099094,0.8991765198387097202115115,1.5700000,0.0000000,0.0000000,-1.7000000,0.0000000,0.0000000,0.0000000,2.0000000,1.0000000]
  </rosparam>


  <rosparam ns="simulation/simulator/subsystems/consumer">
    keep_last_control: false
  </rosparam>

  <rosparam ns="planning">
    <!-- First define the mapping between simulation and world model plants -->
    system_mapping:
    - 
      pair: [simulator/consumer/manipulator, world_model/simulator/manipulator]
    consumer: simulator/consumer
    world_model:
      type: manipulation_world_model
  </rosparam>

  <rosparam ns="planning/world_model/planning_contexts">
    full_space:
      default:
        type: full_mapping
    left_arm_planning:
      default:
        type: "hide_mapping"
  </rosparam>

  <!-- <rosparam ns="planning/world_model" command="load" file="$(find prx_input)/templates/simulators/default_simulator.yaml"/>         -->
  <rosparam ns="planning/world_model" command="load" file="$(find manipulation)/input/manipulation_simulator.yaml"/>  
  <rosparam command="load" ns="planning/world_model/simulator/subsystems/manipulator" file="$(find manipulation)/input/motoman/motoman_complete_kinect_reflex.yaml"/>

  <!-- Load the planning application -->
  <rosparam command="load" ns="planning" file="$(find prx_input)/templates/planning_applications/single_query_application.yaml"/>

  <rosparam ns="planning">
    random_seed: 34378
    consumer_mapping:
      - 
        pair: [simulator/consumer, left_arm_planning]
    visualize: true
    persistent: false
  </rosparam>
        

  <rosparam command="load" ns="planning/motion_planner" file="$(find prx_input)/templates/motion_planners/prm_star.yaml"/> 
  <rosparam command="load" ns="planning/task_planner" file="$(find prx_input)/templates/task_planners/single_shot.yaml"/>

  <rosparam ns="planning/world_model/simulator/obstacles" file="$(find manipulation)/input/shelf.yaml"/>

  <rosparam ns="planning/task_planner/" >
    specification: 
      type: single_shot_specification
    query:
      type: single_shot_query
  </rosparam>


  <rosparam command="load" ns="planning/query_type" file="$(find prx_input)/templates/queries/motion_planning_query.yaml"/>
  <rosparam command="load" ns="planning/specification_type" file="$(find prx_input)/templates/specifications/motion_planning_specification.yaml"/>

  <rosparam ns="planning/world_model/simulator/subsystems/manipulator">
    planning_contexts:
      left_arm_planning:
        type: "motoman_left_torso_state_mapping"
  </rosparam>

  <rosparam ns="planning/task_planner/planners/" >
    planner1:
      template: "motion_planner"
      space_name: "left_arm_planning"
      visualization_bodies: ["simulator/manipulator/head_sponge"]
      visualize: true
      visualize_graph: false
      visualize_solutions: false
      
      deserialize_file: "left_shelf.roadmap"
      # deserialize_file: "left_arm_graph[8_k_top_middle_euclid].roadmap"
      # deserialize_file: "left_arm/left_bin_E.roadmap"
      
      delta_prm: false
      specification:
        template: "specification_type" 
        heuristic_search:
          type: constraints_astar_search
        stopping_criteria:
          elements:
            criterion1:
              type: iteration_criterion
              condition: 50
      query:
        template: "query_type"
        search_mode: standard_search
        #start_state: [0.00,1.57,0.00,0.00,-1.70,0.00,0.00,0.00,0.00]
        start_state: [-0.3696969,-1.8434239,-1.4583325,-1.8129914,2.0006464,0.8294958,-0.5998616,0.7427207,0.0856574]
        goal:
          type: "goal_state"
          distance_metric:
            type: ann_distance_metric
          goal_state: [0.00,1.57,0.00,0.00,-1.70,0.00,0.00,0.00,0.00]
  </rosparam>
  

  <node name="simulation" pkg="prx_simulation" type="prx_simulation" required="true" launch-prefix="" output="screen" args="simulation"/>

  <node name="planning" pkg="prx_planning" type="prx_planning" required="false" launch-prefix="" output="screen" args="planning" />

  <include file="$(find prx_input)/templates/visualization/visualization.launch"/>
  <rosparam ns="visualization/viewer/">
    windows:
      window_1:
        xpos: 900
        ypos: 10
        width: 1000
        height: 1000
        cameras:
          perspective:
            ortho: false
            camera_type: 0
            eye: [0, 0, 1.8]
            center: [1, 0, 0]
            speed: {move: 0.1, rotate: 0.001}
          orthographic:
            ortho: true
            ortho_param:
              left: -10
              right: 10
              bottom: -10
              top: 10
              zNear: 0
              zFar: 1000
            speed: {move: 0.2, rotate: 0.001}
          smooth:
            ortho: false
            camera_type: 2
            eye: [0, -20, 15]
            center: [0, 1, 18]
            speed: {move: 0.2, rotate: 0.001}
  </rosparam>


</launch>
