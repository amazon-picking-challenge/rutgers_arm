<launch>  
  <rosparam command="load" file="$(find prx_input)/templates/spaces/space_types.yaml"/>

  <rosparam ns="simulation" command="load" file="$(find prx_input)/templates/applications/empty_application.yaml" />
  <rosparam ns="simulation" command="load" file="$(find manipulation)/input/manipulation_simulator.yaml"/>  
  <rosparam command="load" ns="simulation/simulator/subsystems/consumer" file="$(find prx_input)/templates/controllers/consumer.yaml"/>
  <rosparam ns="simulation/simulator/subsystems/consumer/subsystems/manipulator" file="$(find manipulation)/input/motoman/motoman_complete_kinect_reflex.yaml"/>

  <rosparam ns="simulation/simulator/obstacles" file="$(find manipulation)/input/shelf.yaml"/>
  <rosparam ns="simulation/simulator/obstacles" file="$(find apc)/input/bounding_boxes.yaml"/>
  
  <rosparam ns="simulation/simulator/subsystems/consumer">
    keep_last_control: false
  </rosparam>


  <node name="simulation" pkg="prx_simulation" type="prx_simulation" clear_params="true" required="true" launch-prefix="" output="screen" args="simulation"/>


  <rosparam command="load" ns="planning">
    system_mapping:
      -
        pair: [simulator/consumer/manipulator, world_model/simulator/manipulator]
      -
        pair: [simulator/box1, world_model/simulator/box1]
    consumer: simulator/consumer
    # random_seed: 693333884
    random_seed: 500677752
    simulate: true
    visualize: true
    persistent: false
    consumer_mapping:
      - 
        pair: [simulator/consumer, manipulator_pc]
    world_model:
      type: manipulation_world_model
      num_ik_seeds: 10
  </rosparam>

  <rosparam command="load" ns="planning" file="$(find prx_input)/templates/spaces/space_types.yaml"/>  
  <rosparam command="load" ns="planning" file="$(find prx_input)/templates/planning_applications/single_query_application.yaml" />
  <rosparam command="load" ns="planning/world_model" file="$(find manipulation)/input/manipulation_simulator.yaml"/>  
  <rosparam command="load" ns="planning/world_model/simulator/subsystems/unigripper" file="$(find manipulation)/input/motoman/unigripper.yaml"/>
  <rosparam ns="planning/world_model/simulator/subsystems/manipulator" file="$(find manipulation)/input/motoman/motoman_complete_kinect_reflex.yaml"/>


  <rosparam ns="planning/world_model/simulator/obstacles" file="$(find manipulation)/input/shelf.yaml"/>
  <rosparam ns="planning/world_model/simulator/obstacles" file="$(find apc)/input/bounding_boxes.yaml"/>


  <rosparam ns="planning/world_model/planning_contexts">
    manipulator_pc:
      default:
        type: "hide_mapping"
    left_full_arm:
      default:
        type: "obstacle_mapping"
      manipulation_context_info:
        full_arm_context_name: "left_full_arm"
        arm_context_name: "left_arm"
        end_effector_context_name: "left_end_effector"
        start_link: "base_link"
        end_link: "head_sponge"
    left_arm:
      default:
        type: "obstacle_mapping"
      manipulation_context_info:
        full_arm_context_name: "left_full_arm"
        arm_context_name: "left_arm"
        end_effector_context_name: "left_end_effector"
        start_link: "base_link"
        end_link: "head_sponge"
    left_arm_planning:
      default:
        type: "hide_mapping"
      manipulation_context_info:
        full_arm_context_name: "left_full_arm"
        arm_context_name: "left_arm"
        end_effector_context_name: "left_end_effector"
        start_link: "base_link"
        end_link: "head_sponge"
    left_end_effector:
      default:
        type: "hide_mapping"
    unigripper_ee_full:
      default:
        type: "hide_mapping"
      manipulation_context_info:
        full_arm_context_name: "unigripper_ee_full"
        arm_context_name: "unigripper_ee_arm"
        end_effector_context_name: "unigripper_ee"
        start_link: "head_plate"
        end_link: "head_sponge"
    unigripper_ee_arm:
      default:
       type: "hide_mapping"
      manipulation_context_info:
        full_arm_context_name: "unigripper_ee_full"
        arm_context_name: "unigripper_ee_arm"
        end_effector_context_name: "unigripper_ee"
        start_link: "head_plate"
        end_link: "head_sponge"
    unigripper_ee_planning:
      default:
        type: "hide_mapping"
      manipulation_context_info:
        full_arm_context_name: "unigripper_ee_full"
        arm_context_name: "unigripper_ee_arm"
        end_effector_context_name: "unigripper_ee"
        start_link: "head_plate"
        end_link: "head_sponge"
    unigripper_ee:
      default:
       type: "hide_mapping"
  </rosparam>

  <rosparam ns="planning/world_model/simulator/subsystems/unigripper">
    planning_contexts:
      manipulator_pc:
        type: "hide_mapping"
      unigripper_ee_full:
        type: "floating_hand_full_state_mapping"
      unigripper_ee_arm:
        type: "floating_hand_state_mapping"
      unigripper_ee:
        type: "floating_hand_gripper_state_mapping"
      unigripper_ee_planning:
        type: "floating_hand_state_mapping"
      left_full_arm:
        type: "hide_mapping"
      left_camera:
        type: "hide_mapping"
      left_arm:
        type: "hide_mapping"
      left_end_effector:
        type: "hide_mapping"
      left_arm_planning:
        type: "hide_mapping"
    state_space: 
<!--       min: [-1.85, -1.75, -2.0, -3.2, 1.3 ,-1.7, 1]
      max: [1.85, 1.75, 2.0, 3.2, 3.2 ,1.7, 5] -->
      scale: [1.0, 1.0, 1.0, 10.0, 10.0, 10.0, 0.0] 
      <!-- scale: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0]  -->
    input_control_space:
      min: [-.1, -.1, -.1, -.7, -.7 ,-.7, 0]
      max: [.1, .1, .1, .7, .7 ,.7, 2] 
    initial_state: [0.6, 0, 1.4175, 0, 0, 0, 1]
  </rosparam>

  <rosparam ns="simulation/simulator/subsystems/consumer/subsystems/manipulator">
    initial_state: [0.0,0.0,0.0,0.0,-1.0,0.0,0.0,0.0,0.0,1.5700000,0.0000000,0.0000000,-1.7000000,0.0000000,0.0000000,0.0000000,2.0000000,1.0000000]
  </rosparam>

  <rosparam ns="planning/world_model/simulator/subsystems/manipulator">
    planning_contexts:
      manipulator_pc:
        type: "full_mapping"
      left_full_arm:
        type: "motoman_left_full_with_torso_state_mapping"
      left_camera:
        type: "motoman_left_full_with_torso_state_mapping"
      left_arm:
        type: "motoman_left_torso_state_mapping"
      left_end_effector:
        type: "motoman_left_gripper_state_mapping"
      left_arm_planning:
        type: "motoman_left_torso_state_mapping"
    initial_state: [0.0,0.0,0.0,0.0,-1.0,0.0,0.0,0.0,0.0,1.5700000,0.0000000,0.0000000,-1.7000000,0.0000000,0.0000000,0.0000000,2.0000000,1.0000000]
  </rosparam>

  <rosparam command="load" ns="simulation/simulator/subsystems/box1" file="$(find manipulation)/input/objects/apc2016_items/crayola_24_ct.yaml" />
  <rosparam command="load" ns="planning/world_model/simulator/subsystems/box1" file="$(find manipulation)/input/objects/apc2016_items/crayola_24_ct.yaml" />

  
  <rosparam command="load" ns="simulation/simulator/subsystems/box1">
    initial_state: [1.1125 0.0 1.3825 0 0 0 1 ]
    #  initial_state: [1.1175 0 1.4175 0 0 0.707107 0.707107    ]
    #  initial_state: [1.0125 0.01 1.4475 0 0 0 1   ]
  </rosparam>
  <rosparam command="load" ns="planning/world_model/simulator/subsystems/box1">
    initial_state: [1.1125 0.0 1.3825 0 0 0 1   ]
    # initial_state: [1.1175 0 1.4175 0 0 0.707107 0.707107   ]
    #  initial_state: [1.0125 0.01 1.4475 0 0 0 1   ]
  </rosparam>  

  <rosparam command="load" ns="planning/task_planner/">
    object_target: [1.1125 0 1.1125 0 0 0 1 ]
    # object_target: [1.1175 0 1.1875 0 0 0.707107 0.707107   ]
    # object_target: [1.1125 -0.1 1.1875 0 0 0 1  ]
  </rosparam>


  <rosparam ns="planning/task_planner/">
    type: jk_tracking_tp
    stat_file: "grasp_stats.txt"
    paired_manipulation_contexts:
    -
      ffee: unigripper_ee_full
      manipulator: left_full_arm
    full_manipulator_context_name: "manipulator_pc"
    manipulation_task_planner_name: "manipulation_task_planner"
    object_name: box1
    specification:
      type: simple_pap_specification
      validity_checker: 
        type: manipulation_validity_checker
        ee_resolution: 0.0
    query:
      type: motion_planning_query
      search_mode: lazy_search
      goal:
        type: multiple_goal_states
        distance_metric:
          type: ann_distance_metric    
    planners:
      manipulation_task_planner:
        type: manipulation_tp
        deserialize_flag: true
        use_ee_dist_in_planners: false
        skip_connectivity_check: true
        num_candidate_connections: 30
        visualize: false
        neighborhood: 0.3
        sampler:
          type: uniform_sampler
        specification:
          type: manipulation_specification
          validity_checker:
            type: manipulation_validity_checker
            ee_resolution: 0.0
        query:
          type: manipulation_query
          search_mode: lazy_search
          smooth_paths: false
          goal:
            type: multiple_goal_states
            distance_metric:
              type: ann_distance_metric
        planners:
          left_arm_motion_planner:
            type: "prm_star"
            visualize_graph: false
            deserialize_file: "left_arm_graph[8_k_top_middle_euclid].roadmap"
            space_name: "left_arm_planning"
            planning_context_name: "left_arm"
            query:
              template: prm_query_template
            specification:
              template: prm_specification_template
          unigripper_ee_arm_motion_planner:
            type: "prm_star"
            deserialize_file: "old_uni_shelf.roadmap"
            space_name: "unigripper_ee_planning"
            planning_context_name: "unigripper_ee_arm"
            query:
              template: prm_query_template
            specification:
              template: prm_specification_template
          grasping_planner:
            type: grasping_planner
            specification:
              type: grasping_specification
              validity_checker:
                type: world_model_validity_checker
            grasp_generators:
              unigripper_ee_full:
                template: unigripper_grasp_generator
              left_full_arm:
                template: unigripper_grasp_generator
  </rosparam>


  <rosparam ns="planning/prm_specification_template">
    type: motion_planning_specification
    validity_checker: 
      type: world_model_validity_checker
    sampler:
      type: uniform_sampler
    distance_metric:
      type: graph_distance_metric
    local_planner:
      type: bvp_local_planner
    stopping_criteria:
      elements:
        criterion1:
          type: iteration_criterion
          condition: 5000
    heuristic_search:
      type: constraints_astar_search
      mode: repropagate_info
      mcr_mode: shortest
  </rosparam>


  <rosparam ns="planning/prm_query_template">
    type: motion_planning_query
    search_mode: lazy_search
    lazy_astar_iterations: 4
    goal:
      type: multiple_goal_states
      distance_metric:
        type: ann_distance_metric
  </rosparam>


  <rosparam ns="planning/unigripper_grasp_generator">
    type: unigripper_grasp_generator
    default_ee_normal: [0,0,1]
    grasp_entire_mesh: false
    save_grasps_to_file: true
    restricted_normals:
    -
      normal: [0,0,-1]
    -
      normal: [1,0,0]
    manual_grasp_mode: 2
    manual_release_mode: 1
    nr_grasps_to_sample: 100
    # manual_angle_increment: 15.0
  </rosparam>

  <node name="planning" pkg="prx_planning" clear_params="true" type="prx_planning" required="false" launch-prefix="gdb --args" output="screen" args="planning"/>


  <include file="$(find prx_input)/templates/visualization/visualization.launch"/>

  <rosparam ns="visualization/viewer/">
    windows:
      window_1:
        xpos: 900
        ypos: 10
        width: 1000
        height: 1000
        cameras:
          perspective:
            ortho: false
            camera_type: 0
            eye: [0, 0, 1.8]
            center: [1, 0, 0]
            speed: {move: 0.1, rotate: 0.001}
          orthographic:
            ortho: true
            ortho_param:
              left: -10
              right: 10
              bottom: -10
              top: 10
              zNear: 0
              zFar: 1000
            speed: {move: 0.2, rotate: 0.001}
          smooth:
            ortho: false
            camera_type: 2
            eye: [0, -20, 15]
            center: [0, 1, 18]
            speed: {move: 0.2, rotate: 0.001}
  </rosparam>

</launch>

