<launch>  
  <rosparam command="load" file="$(find prx_input)/templates/spaces/space_types.yaml"/>

  <rosparam command="load" ns="planning">
    # random_seed: 693333884
    random_seed: 500677752
    simulate: false
    visualize: true
    persistent: false
    world_model:
      type: manipulation_world_model
      num_ik_seeds: 10
  </rosparam>

  <rosparam command="load" ns="planning" file="$(find prx_input)/templates/spaces/space_types.yaml"/>  
  <rosparam command="load" ns="planning" file="$(find prx_input)/templates/planning_applications/single_query_application.yaml" />
  <rosparam command="load" ns="planning/world_model" file="$(find manipulation)/input/manipulation_simulator.yaml"/>  
  <rosparam command="load" ns="planning/world_model/simulator/subsystems/manipulator" file="$(find manipulation)/input/motoman/unigripper.yaml"/>
  <rosparam command="load" ns="planning/world_model/simulator/subsystems/manipulator">
  </rosparam>

  <rosparam ns="planning/world_model/planning_contexts">
    manipulator_pc:
      default:
        type: "hide_mapping"
    left_full_arm:
      default:
        type: "obstacle_mapping"
      manipulation_context_info:
        full_arm_context_name: "left_full_arm"
        arm_context_name: "left_arm"
        end_effector_context_name: "left_end_effector"
        start_link: "head_plate"
        end_link: "head_sponge"
    left_arm:
      default:
       type: "obstacle_mapping"
      manipulation_context_info:
        full_arm_context_name: "left_full_arm"
        arm_context_name: "left_arm"
        end_effector_context_name: "left_end_effector"
        start_link: "head_plate"
        end_link: "head_sponge"
    left_arm_planning:
      default:
        type: "hide_mapping"
      manipulation_context_info:
        full_arm_context_name: "left_full_arm"
        arm_context_name: "left_arm"
        end_effector_context_name: "left_end_effector"
        start_link: "head_plate"
        end_link: "head_sponge"
    left_end_effector:
      default:
       type: "hide_mapping"
  </rosparam>

  <rosparam ns="planning/world_model/simulator/subsystems/manipulator">
    planning_contexts:
      manipulator_pc:
        type: "full_mapping"
      left_full_arm:
        type: "floating_hand_full_state_mapping"
      left_arm:
        type: "floating_hand_state_mapping"
      left_end_effector:
        type: "floating_hand_gripper_state_mapping"
      left_arm_planning:
        type: "floating_hand_state_mapping"
    state_space: 
      min: [0.35, -.75, 0.6, -3.14159, 1.3 ,-3.14159, 1]
      max: [1.5, .75, 1.9, 3.14159, 3.1414 ,3.14159, 5]
      scale: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0]
    input_control_space:
      min: [-.4, -.4, -.4, -.314159, -.314159 ,-.314159, 0]
      max: [.4, .4, .4, .314159, .314159 ,.314159, 2]
    initial_state: [0.7, 0, 1.4175, 0, 1.5708, 0, 1]
  </rosparam>

  <rosparam command="load" ns="planning/world_model/simulator/subsystems/box1" file="$(find manipulation)/input/motoman/test_cases/target_box.yaml" />
  <rosparam command="load" ns="simulation/simulator/subsystems/box1">
    # initial_state: [1.1125 0 1.3725 0.707107 0 0 0.707107  ]
    initial_state: [1.1175 0 1.4175 0 0 0.707107 0.707107    ]
    # initial_state: [1.1125 -0.1 1.4175 0 0 0 1   ]
  </rosparam>
  <rosparam command="load" ns="planning/world_model/simulator/subsystems/box1">
    # initial_state: [1.1125 0 1.3725 0.707107 0 0 0.707107   ]
    initial_state: [1.1175 0 1.4175 0 0 0.707107 0.707107   ]
    # initial_state: [1.1125 -0.1 1.4175 0 0 0 1   ]
  </rosparam>
  <rosparam command="load" ns="planning/task_planner/">
    # object_target: [1.1125 0 1.1425 0.707107 0 0 0.707107 ]
    object_target: [1.1175 0 1.1875 0 0 0.707107 0.707107   ]
    # object_target: [1.1125 -0.1 1.1875 0 0 0 1  ]
  </rosparam>


  <rosparam ns="planning/task_planner/">
    type: suggested_grasp_tp
    stat_file: "grasp_stats.txt"
    full_manipulator_context_name: "manipulator_pc"
    manipulation_context_name: "left_full_arm"
    manipulation_task_planner_name: "manipulation_task_planner"
    object_name: box1
    specification:
      type: simple_pap_specification
      validity_checker: 
        type: world_model_validity_checker
    query:
      type: motion_planning_query
      query_type: add_query_points_collisions
      query_collision_type: lazy_collisions
      goal:
        type: multiple_goal_states
        distance_metric:
          type: ann_distance_metric    
    planners:
      manipulation_task_planner:
        type: manipulation_tp
        serialize_flag: true
        use_ee_dist_in_planners: false
        skip_connectivity_check: true
        num_candidate_connections: 30
        neighborhood: 0.3
        sampler:
          type: uniform_sampler
        specification:
          type: manipulation_specification
          validity_checker:
            type: world_model_validity_checker
        query:
          type: manipulation_query
          search_mode: lazy_search
          smooth_paths: true
          goal:
            type: multiple_goal_states
            distance_metric:
              type: ann_distance_metric
        planners:
          left_arm_motion_planner:
            type: "prm_star"
            visualization_bodies: ["simulator/manipulator/head_sponge"]
            visualize_graph: false
            visualize_solutions: false 
            visualize: false
            # deserialize_file: "left_arm_graph[5k_ee].roadmap"
            serialize_file: "flying_unigripper_test[80k].roadmap"
            space_name: "left_arm_planning"
            planning_context_name: "left_arm"
            query:
              type: motion_planning_query
              lazy_astar_iterations: 4
              goal:
                type: multiple_goal_states
                distance_metric:
                  type: ann_distance_metric
            specification:
              type: motion_planning_specification
              validity_checker: 
                type: world_model_validity_checker
              sampler:
                type: restricted_normals_sampler
                default_axis: [0,0,1]
              distance_metric:
                type: graph_distance_metric
              local_planner:
                type: bvp_local_planner
              stopping_criteria:
                elements:
                  criterion1:
                    type: iteration_criterion
                    condition: 80000
              heuristic_search:
                type: constraints_astar_search
                mode: repropagate_info
                mcr_mode: shortest
          grasping_planner:
            type: apc_grasping_planner
            specification:
              type: grasping_specification
              validity_checker:
                type: world_model_validity_checker
            data_folders: 
              left_full_arm: "prx_packages/manipulation/input/grasp_data/unigripper_24_fixed/"
  </rosparam>

  <node name="planning" pkg="prx_planning" clear_params="true" type="prx_planning" required="false" launch-prefix="gdb --args" output="screen" args="planning"/>

</launch>
