<launch>

  <!-- Load independent files -->
        
  <rosparam command="load" file="$(find prx_input)/templates/applications/empty_application.yaml"/>
  <rosparam command="load" file="$(find prx_input)/templates/simulators/collision_stop_simulator.yaml"/>
  <rosparam command="load" file="$(find prx_input)/templates/spaces/space_types.yaml"/>

  <!-- Load template files -->
  <rosparam ns="simulator">
  simulation_step: 0.002
  </rosparam>

        
  <rosparam command="load" ns="controller" file="$(find prx_input)/templates/controllers/consumer.yaml"/>
  <rosparam command="load" ns="plant" file="$(find prx_input)/templates/plants/second_order_car.yaml"/>
  
  <!-- Override template parameters -->
        
  <rosparam ns="controller">
  </rosparam>
        
  <rosparam ns="plant">
    integrator: 
      type: euler
    state_space: 
      min: [-400,-400,-3.14,0,-1]
      max: [400,400,3.14,60,1]
    input_control_space: 
      min: [-3,-.15]
      max: [ 5,.15]
  </rosparam>
       
  <!-- Set up concrete system tree -->
   
  <rosparam command="load" ns="simulator/subsystems/consumer">
    template: "controller"
  </rosparam>
        
  <rosparam command="load" ns="simulator/subsystems/consumer/subsystems/car">
    template: "plant"
    initial_state: [0,0,0,0,0]
  </rosparam>
  
  <!-- Define the simulation node -->
  <node name="simulation" pkg="prx_simulation" type="prx_simulation"
        required="true" launch-prefix="" output="screen" />
  <rosparam command="load" ns="simulator/obstacles"
     file="$(find prx_input)/templates/environments/simple_car_maze.yaml"/>

</launch>
