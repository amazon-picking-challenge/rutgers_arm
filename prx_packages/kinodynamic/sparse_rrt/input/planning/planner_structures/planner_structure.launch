<launch>
  <!-- Load the planning application -->
  <rosparam command="load" file="$(find prx_input)/templates/planning_applications/single_query_application.yaml"/>

  <rosparam >
  simulate: true
  visualize: true
  random_seed: 48484
  </rosparam>

  <!-- Load template files -->
       
  <rosparam command="load" ns="motion_planner/" file="$(find sparse_rrt)/input/templates/sparse_rrt.yaml"/>
  <!--<rosparam command="load" ns="motion_planner/" file="$(find prx_input)/templates/motion_planners/rrt_star.yaml"/>-->
 
  <!-- We currently only support one task planner. It will be future work to bring task planners that work on task planners. -->
  <rosparam command="load" ns="task_planner/" file="$(find prx_input)/templates/task_planners/single_shot.yaml"/>

  <!-- Overwrite any parameters for the template or the task planner -->
  <rosparam ns="task_planner/" >
stats_criteria:
  elements:
    criterion1:
      type: timed_criterion
      condition: 30
  </rosparam>

  <!-- Set up the motion planners used in the task planner. 
	 1) can either be from template or loading a yaml and rewriting the values
	 2) the space name needs to correspond to the names in the world_model file -->
  <rosparam ns="task_planner/planners/" >
  planner1:
    template: "motion_planner"
    space_name: "no_embedding"
    visualization_body: "simulator/car/chassis"
    visualize_tree: false
    visualize_solution: true
    visualize: true
    delta: 1
    delta_multiple: 10
    drain: true
    radius_nearest: true
    collision_checking: true
    max_attempts: 5
    distance_metric:
      type: graph_distance_metric
      distance_function: default
    local_planner:
      type: time_varying_local_planner
      num_controls: 1
      lower_multiple: 50
      upper_multiple: 500
  </rosparam>


</launch>
