<!-- Auto generated launch file for Baxter: 2 1 1 -->
<launch>
  <rosparam command="load" file="$(find prx_input)/templates/spaces/space_types.yaml"/>

  <!-- = = = = = = = -->
  <!--   Simulation  -->
  <!-- = = = = = = = -->
  <!-- Load independent files -->
  <rosparam command="load" ns="simulation" file="$(find prx_input)/templates/applications/empty_application.yaml"/>
  <rosparam command="load" ns="simulation" file="$(find manipulation)/input/simulation/manipulation_simulator.yaml"/>
  <rosparam command="load" ns="simulation/simulator/subsystems/consumer/" file="$(find prx_input)/templates/controllers/consumer.yaml"/>
  <rosparam command="load" ns="simulation/simulator/subsystems/consumer/subsystems/router/" file="$(find prx_input)/templates/controllers/router.yaml"/>

  <!-- Load template files -->
  <rosparam command="load" ns="simulation/plant" file="$(find baxter)input/urdf/baxter_nomesh.yaml"/>

  <rosparam command="load" ns="simulation/simulator">
    manipulator_names:
      -
        simulator/consumer/router/baxter_1_left
      -
        simulator/consumer/router/baxter_1_right
      -
        simulator/consumer/router/baxter_2_left
      -
        simulator/consumer/router/baxter_2_right
    sensing_info:
      type: grasp_sensing_info
      sources: ["grasp_sensor1"]
      update_delay: 0.02
    grasp_sensor_source: "grasp_sensor1"
  </rosparam>
  <rosparam ns="simulation/simulator/sensing">
    type: sensing_model
    sensors:
      grasp_sensor1:
        type: simulated_grasp_sensor
        source: "grasp_sensor1"
        sensor_delay: 0.02
  </rosparam>
  <!-- = = = = = = = -->
  <!--    Planning   -->
  <!-- = = = = = = = -->

  <!-- System Mappings -->
  <rosparam ns="planning">
    system_mapping:
    -
      pair: [simulator/consumer/router/baxter_1_left, world_model/simulator/baxter_1_left]
    -
      pair: [simulator/consumer/router/baxter_1_right, world_model/simulator/baxter_1_right]
    -
      pair: [simulator/consumer/router/baxter_2_left, world_model/simulator/baxter_2_left]
    -
      pair: [simulator/consumer/router/baxter_2_right, world_model/simulator/baxter_2_right]
    consumer: simulator/consumer
  </rosparam>

  <rosparam ns="planning/task_planner">
    manipulator_mapping:
    -
      system: simulator/baxter_1_left
      index: 0
    -
      system: simulator/baxter_1_right
      index: 1
    -
      system: simulator/baxter_2_left
      index: 2
    -
      system: simulator/baxter_2_right
      index: 3
  </rosparam>

  <rosparam command="load" ns="planning" file="$(find prx_input)/templates/spaces/space_types.yaml"/>
  <rosparam command="load" ns="planning/world_model" file="$(find manipulation)/input/simulation/manipulation_simulator.yaml"/>
  <rosparam command="load" ns="planning" file="$(find prx_input)/templates/planning_applications/single_query_application.yaml"/>
  <rosparam command="load" ns="planning/task_planner/" file="$(find many_arm)/input/templates/many_arm_manip_tp.yaml"/>

  <!-- Load template files -->
  <rosparam command="load" ns="planning/plant" file="$(find baxter)input/urdf/baxter.yaml"/>

  <rosparam ns="planning">
    random_seed: 9854652
    consumer_mapping:
      -
        pair: [simulator/consumer, full_space]
  </rosparam>

  <rosparam ns="planning/task_planner">
    preprocess: true
  </rosparam>

  <rosparam ns="planning/problems">
    benchmark_problem:
      specification:
        type: "manipulation_specification"
        sampler:
          type: uniform_sampler
        validity_checker:
          type: world_model_validity_checker
        distance_metric:
          type: linear_distance_metric
        local_planner:
          type: bvp_local_planner
        stopping_criteria:
          elements:
            criterion1:
              type: iteration_criterion
              condition: 1000
        manipulation_sampler:
          type: manip_sampler
          min_theta: 0.0
          max_theta: 6.184
          max_tries: 50
      query:
        type: "motion_planning_query"
        goal:
          type: "goal_state"
          distance_metric:
            type: linear_distance_metric
  </rosparam>

  <rosparam command="load" ns="planning/world_model/simulator">
    manipulator_names:
      -
        simulator/baxter_1_left
      -
        simulator/baxter_1_right
      -
        simulator/baxter_2_left
      -
        simulator/baxter_2_right
    sensing_info:
      type: grasp_sensing_info
      sources: ["grasp_sensor2"]
      update_delay: 0.02
    grasp_sensor_source: "grasp_sensor2"
  </rosparam>
  <rosparam ns="planning/world_model/simulator/sensing">
    type: sensing_model
    sensors:
      grasp_sensor2:
        type: simulated_grasp_sensor
        source: "grasp_sensor2"
        sensor_delay: 0.02
  </rosparam>

  <rosparam ns="planning/task_planner">
    stable_sig_filename: stable_sig_table_2_1.txt
    handoff_sig_filename: handoff_sig_table_2_1.txt
    object_k: 1
    nr_samples: 3
  </rosparam>

  <!-- = = = = = = = -->
  <!--  Environment  -->
  <!-- = = = = = = = -->

  <rosparam command="load" ns="simulation/cup" file="$(find manipulation)/input/simulation/plants/cups.yaml"/>
  <rosparam ns="simulation/cup">
    state_space:
        min: [-2, -3, -100, -1, -1, -1, -1]
        max: [22, 3, 100, 1, 1, 1, 1]
        scale: [0,0,0,0,0,0,0]
    geometries:
      -
        name: body
        collision_geometry:
          type: cylinder
          radius: 0.035
          height: 0.3
          material: orange
  </rosparam>

  <rosparam command="load" ns="planning/cup" file="$(find manipulation)/input/simulation/plants/cups.yaml"/>
  <rosparam ns="planning/cup">
    state_space:
        min: [-2, -3, -100, -1, -1, -1, -1]
        max: [22, 3, 100, 1, 1, 1, 1]
        scale: [0,0,0,0,0,0,0]
    geometries:
      -
        name: body
        collision_geometry:
          type: cylinder
          radius: 0.035
          height: 0.3
          material: orange
  </rosparam>

  <rosparam command="load" ns="simulation/simulator/obstacles" file="$(find prx_input)/templates/environments/PABTSecondFloorZUP.yaml"/>

  <!-- Table 1-->
  <rosparam ns="simulation/simulator/obstacles">
    table1:
      type: obstacle
      geometries:
        -
          name: top1
          collision_geometry:
            type: box
            dims: [1.0,1.0,0.06]
            material: white
          config:
            position: [0, 0, 0.77]
            orientation: [0,0,0,1]
        -
          name: leg_1_1
          collision_geometry:
            type: box
            dims: [0.06,0.06,0.78]
            material: gold
          config:
            position: [0.465, 0.465, 0.39]
            orientation: [0,0,0,1]
        -
          name: leg_2_1
          collision_geometry:
            type: box
            dims: [0.06,0.06,0.78]
            material: gold
          config:
            position: [-0.465, 0.465, 0.39]
            orientation: [0,0,0,1]
        -
          name: leg_3_1
          collision_geometry:
            type: box
            dims: [0.06,0.06,0.78]
            material: gold
          config:
            position: [-0.465, -0.465, 0.39]
            orientation: [0,0,0,1]
        -
          name: leg_4_1
          collision_geometry:
            type: box
            dims: [0.06,0.06,0.78]
            material: gold
          config:
            position: [0.465, -0.465, 0.39]
            orientation: [0,0,0,1]
  </rosparam>

  <rosparam ns="planning/world_model/simulator/obstacles">
    table1:
      type: obstacle
      geometries:
        -
          name: top1
          collision_geometry:
            type: box
            dims: [1.0,1.0,0.06]
            material: white
          config:
            position: [0, 0, 0.77]
            orientation: [0,0,0,1]
        -
          name: leg_1_1
          collision_geometry:
            type: box
            dims: [0.06,0.06,0.78]
            material: gold
          config:
            position: [0.465, 0.465, 0.39]
            orientation: [0,0,0,1]
        -
          name: leg_2_1
          collision_geometry:
            type: box
            dims: [0.06,0.06,0.78]
            material: gold
          config:
            position: [-0.465, 0.465, 0.39]
            orientation: [0,0,0,1]
        -
          name: leg_3_1
          collision_geometry:
            type: box
            dims: [0.06,0.06,0.78]
            material: gold
          config:
            position: [-0.465, -0.465, 0.39]
            orientation: [0,0,0,1]
        -
          name: leg_4_1
          collision_geometry:
            type: box
            dims: [0.06,0.06,0.78]
            material: gold
          config:
            position: [0.465, -0.465, 0.39]
            orientation: [0,0,0,1]
  </rosparam>

  <!-- Table 2-->
  <rosparam ns="simulation/simulator/obstacles">
    table2:
      type: obstacle
      geometries:
        -
          name: top2
          collision_geometry:
            type: box
            dims: [1.0,1.0,0.06]
            material: white
          config:
            position: [1, 0, 0.77]
            orientation: [0,0,0,1]
        -
          name: leg_1_2
          collision_geometry:
            type: box
            dims: [0.06,0.06,0.78]
            material: gold
          config:
            position: [1.465, 0.465, 0.39]
            orientation: [0,0,0,1]
        -
          name: leg_2_2
          collision_geometry:
            type: box
            dims: [0.06,0.06,0.78]
            material: gold
          config:
            position: [0.535, 0.465, 0.39]
            orientation: [0,0,0,1]
        -
          name: leg_3_2
          collision_geometry:
            type: box
            dims: [0.06,0.06,0.78]
            material: gold
          config:
            position: [0.535, -0.465, 0.39]
            orientation: [0,0,0,1]
        -
          name: leg_4_2
          collision_geometry:
            type: box
            dims: [0.06,0.06,0.78]
            material: gold
          config:
            position: [1.465, -0.465, 0.39]
            orientation: [0,0,0,1]
  </rosparam>

  <rosparam ns="planning/world_model/simulator/obstacles">
    table2:
      type: obstacle
      geometries:
        -
          name: top2
          collision_geometry:
            type: box
            dims: [1.0,1.0,0.06]
            material: white
          config:
            position: [1, 0, 0.77]
            orientation: [0,0,0,1]
        -
          name: leg_1_2
          collision_geometry:
            type: box
            dims: [0.06,0.06,0.78]
            material: gold
          config:
            position: [1.465, 0.465, 0.39]
            orientation: [0,0,0,1]
        -
          name: leg_2_2
          collision_geometry:
            type: box
            dims: [0.06,0.06,0.78]
            material: gold
          config:
            position: [0.535, 0.465, 0.39]
            orientation: [0,0,0,1]
        -
          name: leg_3_2
          collision_geometry:
            type: box
            dims: [0.06,0.06,0.78]
            material: gold
          config:
            position: [0.535, -0.465, 0.39]
            orientation: [0,0,0,1]
        -
          name: leg_4_2
          collision_geometry:
            type: box
            dims: [0.06,0.06,0.78]
            material: gold
          config:
            position: [1.465, -0.465, 0.39]
            orientation: [0,0,0,1]
  </rosparam>

  <!-- Table 3-->
  <rosparam ns="simulation/simulator/obstacles">
    table3:
      type: obstacle
      geometries:
        -
          name: top3
          collision_geometry:
            type: box
            dims: [1.0,1.0,0.06]
            material: white
          config:
            position: [2, 0, 0.77]
            orientation: [0,0,0,1]
        -
          name: leg_1_3
          collision_geometry:
            type: box
            dims: [0.06,0.06,0.78]
            material: gold
          config:
            position: [2.465, 0.465, 0.39]
            orientation: [0,0,0,1]
        -
          name: leg_2_3
          collision_geometry:
            type: box
            dims: [0.06,0.06,0.78]
            material: gold
          config:
            position: [1.535, 0.465, 0.39]
            orientation: [0,0,0,1]
        -
          name: leg_3_3
          collision_geometry:
            type: box
            dims: [0.06,0.06,0.78]
            material: gold
          config:
            position: [1.535, -0.465, 0.39]
            orientation: [0,0,0,1]
        -
          name: leg_4_3
          collision_geometry:
            type: box
            dims: [0.06,0.06,0.78]
            material: gold
          config:
            position: [2.465, -0.465, 0.39]
            orientation: [0,0,0,1]
  </rosparam>

  <rosparam ns="planning/world_model/simulator/obstacles">
    table3:
      type: obstacle
      geometries:
        -
          name: top3
          collision_geometry:
            type: box
            dims: [1.0,1.0,0.06]
            material: white
          config:
            position: [2, 0, 0.77]
            orientation: [0,0,0,1]
        -
          name: leg_1_3
          collision_geometry:
            type: box
            dims: [0.06,0.06,0.78]
            material: gold
          config:
            position: [2.465, 0.465, 0.39]
            orientation: [0,0,0,1]
        -
          name: leg_2_3
          collision_geometry:
            type: box
            dims: [0.06,0.06,0.78]
            material: gold
          config:
            position: [1.535, 0.465, 0.39]
            orientation: [0,0,0,1]
        -
          name: leg_3_3
          collision_geometry:
            type: box
            dims: [0.06,0.06,0.78]
            material: gold
          config:
            position: [1.535, -0.465, 0.39]
            orientation: [0,0,0,1]
        -
          name: leg_4_3
          collision_geometry:
            type: box
            dims: [0.06,0.06,0.78]
            material: gold
          config:
            position: [2.465, -0.465, 0.39]
            orientation: [0,0,0,1]
  </rosparam>

  <!-- Baxter 1-->
  <rosparam command="load" ns="simulation/simulator/subsystems/consumer/subsystems/router/subsystems/baxter_1_left">
    template: "plant"
    initial_state: [1.2127369170708217627208114,-0.2675828681878439363472921,-1.0942458940497321595586300,2.3009444402996090950352936,0.7373279053308788855147782,-0.7885382828714969649652744,-2.3612843442941562344117301,1.0000000000000000000000000]
    initial_state: [0.00000,-1.34394,-0.42624,2.61800,-2.84100,2.09400,-0.06762,0.00000]
    hand: left
    forward_transform_rotation: [0,1.0,0,-1.0,0,0,0,0,1]
    forward_transform_translation: [0.5,1,0.785]
  </rosparam>

  <rosparam command="load" ns="simulation/simulator/subsystems/consumer/subsystems/router/subsystems/baxter_1_right">
    template: "plant"
    initial_state: [-0.881,-0.128,-0.363,1.666,2.626,1.736,0.333,1.000]
    initial_state: [0.00000,-1.34394,0.42624,2.61800,2.84100,2.09400,-0.06762,0.00000]
    hand: right
    forward_transform_rotation: [0,1.0,0,-1.0,0,0,0,0,1]
    forward_transform_translation: [0.5,1,0.785]
  </rosparam>

  <rosparam command="load" ns="simulation/simulator/subsystems/consumer/subsystems/router/subsystems/baxter_2_left">
    template: "plant"
    initial_state: [-1.387,-1.306,-0.259,1.598,-1.384,-1.191,-1.872,0.000]
    initial_state: [0.00000,-1.34394,-0.42624,2.61800,-2.84100,2.09400,-0.06762,0.00000]
    hand: left
    forward_transform_rotation: [0,-1.0,0,1.0,0,0,0,0,1]
    forward_transform_translation: [1.5,-1,0.785]
  </rosparam>

  <rosparam command="load" ns="simulation/simulator/subsystems/consumer/subsystems/router/subsystems/baxter_2_right">
    template: "plant"
    initial_state: [0.919,-0.575,0.956,1.075,0.605,-0.731,1.813,1.000]
    initial_state: [0.00000,-1.34394,0.42624,2.61800,2.84100,2.09400,-0.06762,0.00000]
    hand: right
    forward_transform_rotation: [0,-1.0,0,1.0,0,0,0,0,1]
    forward_transform_translation: [1.5,-1,0.785]
  </rosparam>

  <rosparam command="load" ns="simulation/simulator/subsystems/cup">
    template: "cup"
    initial_state: [2.2,-0.020,0.960,0.000,0.000,0.000,1.000]
  </rosparam>

  <rosparam command="load" ns="simulation/simulator/subsystems/pose">
    template: "cup"
    initial_state: [1.553,-0.174,-1.406,0.000,0.000,0.000,1.000]
    geometries:
      -
        name: body
        collision_geometry:
          type: box
          dims: [0.02, 0.04, 0.04]
          material: violet
  </rosparam>

  <rosparam command="load" ns="simulation/simulator/subsystems/hand_pose">
    template: "cup"
    initial_state: [0.628754,0.479928,-1.04526, -0.68011,0.193517,-0.68011,-0.193517]
    geometries:
      -
        name: body
        collision_geometry:
          type: box
          dims: [0.05, 0.102, 0.05]
          material: yellow
  </rosparam>

  <rosparam command="load" ns="simulation/simulator/subsystems/artwork">
    template: "cup"
    initial_state: [0.0, 0.0, 0.0, 0.000,0.000,0.000,1.000]
    geometries:
      -
        name: body
        collision_geometry:
          type: polygon
          triangles: [0.0, 0.0, 2.2, 0.5, -1.0, 2.0, 0.0, 1.0, 2.2,
                      0.5, -1.0, 2.0, 0.5, 1.0, 2.0, 0.0, 1.0, 2.2,
                      0.5, -1.0, 2.0, 1.0, 1.0, 2.2, 0.5, 1.0, 2.0,
                      1.0, 1.0, 2.2, 0.5, -1.0, 2.0, 1.0, 0.0, 2.2 ]
          material: silver
  </rosparam>

  <rosparam ns="simulation/simulator/obstacles">
    baxter1_torso:
      type: obstacle
      geometries:
        -
          name: pedestal1
          collision_geometry:
            type: box
            dims: [0.90, 0.80, 0.05]
            material: baxter_grey
          config:
            position: [0.5, 1.04, 0.31]
            orientation: [0,0,-0.707106781186547,0.707106781186548]
        -
          name: torso1
          collision_geometry:
            type: cylinder
            radius: 0.15
            height: 1.6
            material: baxter_red
          config:
            position: [0.5, 1.065, 1.085]
            orientation: [0,0,-0.707106781186547,0.707106781186548]
        -
          name: head1
          collision_geometry:
            type: cylinder
            radius: 0.1
            height: 0.25
            material: baxter_grey
          config:
            position: [0.5, 0.96, 1.585]
            orientation: [0,0,-0.707106781186547,0.707106781186548]
  </rosparam>

  <rosparam ns="planning/task_planner/planners/" >
    planner_1_left_move:
      type: prm_star
      heuristic_search:
        type: prm_astar
      space_name: "full_space"
      visualization_body: "simulator/baxter_left/end_effector"
      visualization_bodies: ["simulator/baxter_left/end_effector"]
      visualize_graph: false
      visualize_tree: false
      visualize_solutions: false
      goal_bias_rate: 0.1
      graph_color: "green"
      serialize_file: graph_1_left_move.txt
  </rosparam>

  <rosparam ns="planning/task_planner/planners/" >
    planner_1_left_transfer:
      type: prm_star
      heuristic_search:
        type: prm_astar
      space_name: "full_space"
      visualization_body: "simulator/baxter_left/end_effector"
      visualization_bodies: ["simulator/baxter_left/end_effector"]
      visualize_graph: false
      visualize_tree: false
      visualize_solutions: false
      goal_bias_rate: 0.1
      graph_color: "green"
      serialize_file: graph_1_left_transfer.txt
  </rosparam>

  <rosparam ns="planning/task_planner/planners/" >
    planner_1_right_move:
      type: prm_star
      heuristic_search:
        type: prm_astar
      space_name: "full_space"
      visualization_body: "simulator/baxter_right/end_effector"
      visualization_bodies: ["simulator/baxter_right/end_effector"]
      visualize_graph: false
      visualize_tree: false
      visualize_solutions: false
      goal_bias_rate: 0.1
      graph_color: "green"
      serialize_file: graph_1_right_move.txt
  </rosparam>

  <rosparam ns="planning/task_planner/planners/" >
    planner_1_right_transfer:
      type: prm_star
      heuristic_search:
        type: prm_astar
      space_name: "full_space"
      visualization_body: "simulator/baxter_right/end_effector"
      visualization_bodies: ["simulator/baxter_right/end_effector"]
      visualize_graph: false
      visualize_tree: false
      visualize_solutions: false
      goal_bias_rate: 0.1
      graph_color: "green"
      serialize_file: graph_1_right_transfer.txt
  </rosparam>

  <rosparam ns="planning/world_model/simulator/obstacles">
    baxter1_torso:
      type: obstacle
      geometries:
        -
          name: pedestal1
          collision_geometry:
            type: box
            dims: [0.90, 0.80, 0.05]
            material: baxter_grey
          config:
            position: [0.5, 1.04, 0.31]
            orientation: [0,0,-0.707106781186547,0.707106781186548]
        -
          name: torso1
          collision_geometry:
            type: cylinder
            radius: 0.15
            height: 1.6
            material: baxter_red
          config:
            position: [0.5, 1.065, 1.085]
            orientation: [0,0,-0.707106781186547,0.707106781186548]
        -
          name: head1
          collision_geometry:
            type: cylinder
            radius: 0.1
            height: 0.25
            material: baxter_grey
          config:
            position: [0.5, 0.96, 1.585]
            orientation: [0,0,-0.707106781186547,0.707106781186548]
  </rosparam>

  <!-- Baxter 2-->

  <rosparam ns="simulation/simulator/obstacles">
    baxter2_torso:
      type: obstacle
      geometries:
        -
          name: pedestal2
          collision_geometry:
            type: box
            dims: [0.90, 0.80, 0.05]
            material: baxter_grey
          config:
            position: [1.5, -1.04, 0.31]
            orientation: [0,0,0.707106781186547,0.707106781186548]
        -
          name: torso2
          collision_geometry:
            type: cylinder
            radius: 0.15
            height: 1.6
            material: baxter_red
          config:
            position: [1.5, -1.065, 1.085]
            orientation: [0,0,0.707106781186547,0.707106781186548]
        -
          name: head2
          collision_geometry:
            type: cylinder
            radius: 0.1
            height: 0.25
            material: baxter_grey
          config:
            position: [1.5, -0.96, 1.585]
            orientation: [0,0,0.707106781186547,0.707106781186548]
  </rosparam>

  <rosparam ns="planning/task_planner/planners/" >
    planner_2_left_move:
      type: prm_star
      heuristic_search:
        type: prm_astar
      space_name: "full_space"
      visualization_body: "simulator/baxter_left/end_effector"
      visualization_bodies: ["simulator/baxter_left/end_effector"]
      visualize_graph: false
      visualize_tree: false
      visualize_solutions: false
      goal_bias_rate: 0.1
      graph_color: "green"
      serialize_file: graph_2_left_move.txt
  </rosparam>

  <rosparam ns="planning/task_planner/planners/" >
    planner_2_left_transfer:
      type: prm_star
      heuristic_search:
        type: prm_astar
      space_name: "full_space"
      visualization_body: "simulator/baxter_left/end_effector"
      visualization_bodies: ["simulator/baxter_left/end_effector"]
      visualize_graph: false
      visualize_tree: false
      visualize_solutions: false
      goal_bias_rate: 0.1
      graph_color: "green"
      serialize_file: graph_2_left_transfer.txt
  </rosparam>

  <rosparam ns="planning/task_planner/planners/" >
    planner_2_right_move:
      type: prm_star
      heuristic_search:
        type: prm_astar
      space_name: "full_space"
      visualization_body: "simulator/baxter_right/end_effector"
      visualization_bodies: ["simulator/baxter_right/end_effector"]
      visualize_graph: false
      visualize_tree: false
      visualize_solutions: false
      goal_bias_rate: 0.1
      graph_color: "green"
      serialize_file: graph_2_right_move.txt
  </rosparam>

  <rosparam ns="planning/task_planner/planners/" >
    planner_2_right_transfer:
      type: prm_star
      heuristic_search:
        type: prm_astar
      space_name: "full_space"
      visualization_body: "simulator/baxter_right/end_effector"
      visualization_bodies: ["simulator/baxter_right/end_effector"]
      visualize_graph: false
      visualize_tree: false
      visualize_solutions: false
      goal_bias_rate: 0.1
      graph_color: "green"
      serialize_file: graph_2_right_transfer.txt
  </rosparam>

  <rosparam ns="planning/world_model/simulator/obstacles">
    baxter2_torso:
      type: obstacle
      geometries:
        -
          name: pedestal2
          collision_geometry:
            type: box
            dims: [0.90, 0.80, 0.05]
            material: baxter_grey
          config:
            position: [1.5, -1.04, 0.31]
            orientation: [0,0,0.707106781186547,0.707106781186548]
        -
          name: torso2
          collision_geometry:
            type: cylinder
            radius: 0.15
            height: 1.6
            material: baxter_red
          config:
            position: [1.5, -1.065, 1.085]
            orientation: [0,0,0.707106781186547,0.707106781186548]
        -
          name: head2
          collision_geometry:
            type: cylinder
            radius: 0.1
            height: 0.25
            material: baxter_grey
          config:
            position: [1.5, -0.96, 1.585]
            orientation: [0,0,0.707106781186547,0.707106781186548]
  </rosparam>

  <rosparam ns="simulation/simulator/obstacles">
    bin1:
      type: obstacle
      geometries:
        -
          name: base
          collision_geometry:
            type: box
            dims: [0.6,1.0,0.6]
            material: yellow
          config:
            position: [-0.5,1,0.3]
            orientation: [0,0,0.0,1.0]
  </rosparam>

  <rosparam ns="planning/world_model/simulator/obstacles">
    bin1:
      type: obstacle
      geometries:
        -
          name: base
          collision_geometry:
            type: box
            dims: [0.6,1.0,0.6]
            material: yellow
          config:
            position: [-0.5,1,0.3]
            orientation: [0,0,0.0,1.0]
  </rosparam>

  <rosparam ns="simulation/simulator/obstacles">
    colors:
      type: obstacle
      geometries:
        -
          name: base
          collision_geometry:
            type: box
            dims: [0.5,0.5,0.5]
            material: indigo
          config:
            position: [-0.5,-12.0,0.25]
            orientation: [0,0,0.0,1.0]
  </rosparam>


  <!-- = = = = = = = -->
  <!-- Visualization -->
  <!-- = = = = = = = -->
  <include file="$(find many_arm)input/visualization.launch"/>

  <!-- Define the simulation node -->
  <node name="simulation" pkg="prx_simulation" type="prx_simulation" required="true" launch-prefix="" output="screen" args="simulation" />

</launch>

